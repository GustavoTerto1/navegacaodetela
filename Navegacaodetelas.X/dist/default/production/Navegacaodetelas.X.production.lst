

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu May 20 13:36:05 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     	FNCALL	_main,_delay
   868                           	FNCALL	_main,_dispLCD
   869                           	FNCALL	_main,_dispLCD_init
   870                           	FNCALL	_main,_teclado
   871                           	FNCALL	_main,_teclado_init
   872                           	FNCALL	_dispLCD_init,_dispLCD_instReg
   873                           	FNCALL	_dispLCD,_dispLCD_dataReg
   874                           	FNCALL	_dispLCD,_dispLCD_lincol
   875                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
   876                           	FNROOT	_main
   877                           	global	_tabela
   878                           	global	main@F1285
   879                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   880                           global __pidataBANK0
   881                           __pidataBANK0:
   882  04DA                     	file	"teclado.c"
   883                           	line	23
   884                           
   885                           ;initializer for _tabela
   886                           	retlw	031h
   887  04DA  3431               	retlw	032h
   888  04DB  3432               	retlw	033h
   889  04DC  3433               	retlw	041h
   890  04DD  3441               	retlw	034h
   891  04DE  3434               	retlw	035h
   892  04DF  3435               	retlw	036h
   893  04E0  3436               	retlw	042h
   894  04E1  3442               	retlw	037h
   895  04E2  3437               	retlw	038h
   896  04E3  3438               	retlw	039h
   897  04E4  3439               	retlw	043h
   898  04E5  3443               	retlw	02Ah
   899  04E6  342A               	retlw	030h
   900  04E7  3430               	retlw	023h
   901  04E8  3423               	retlw	044h
   902  04E9  3444               	file	"man.c"
   903                           	line	19
   904                           
   905                           ;initializer for main@F1285
   906                           	retlw	032h
   907  04EA  3432               	retlw	031h
   908  04EB  3431               	retlw	031h
   909  04EC  3431               	retlw	038h
   910  04ED  3438               	global	main@F1283
   911                           	global	_PORTB
   912                           _PORTB	set	0x6
   913  0006                     	global	_LCDbits
   914                           _LCDbits	set	8
   915  0008                     	global	_TRISB
   916                           _TRISB	set	0x86
   917  0086                     	global	_TRISDbits
   918                           _TRISDbits	set	0x88
   919  0088                     	global	_ANSELH
   920                           _ANSELH	set	0x189
   921  0189                     psect	strings,class=STRING,delta=2,noexec
   922                           global __pstrings
   923                           __pstrings:
   924  0003                     stringtab:
   925  0003                     	global    __stringtab
   926                           __stringtab:
   927  0003                     ;	String table - string pointers are 1 byte each
   928                           stringcode:stringdir:
   929  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
   930  0003  3000               movwf pclath
   931  0004  008A               movf fsr,w
   932  0005  0804               incf fsr
   933  0006  0A84               	addwf pc
   934  0007  0782               	global __stringbase
   935                           __stringbase:
   936  0008                     	retlw	0
   937  0008  3400               psect	strings
   938                           	global    __end_of__stringtab
   939                           __end_of__stringtab:
   940  0009                     	
   941                           STR_4:	
   942  0009                     	retlw	111	;'o'
   943  0009  346F               	retlw	112	;'p'
   944  000A  3470               	retlw	101	;'e'
   945  000B  3465               	retlw	114	;'r'
   946  000C  3472               	retlw	97	;'a'
   947  000D  3461               	retlw	110	;'n'
   948  000E  346E               	retlw	100	;'d'
   949  000F  3464               	retlw	111	;'o'
   950  0010  346F               	retlw	46	;'.'
   951  0011  342E               	retlw	46	;'.'
   952  0012  342E               	retlw	46	;'.'
   953  0013  342E               	retlw	32	;' '
   954  0014  3420               	retlw	32	;' '
   955  0015  3420               	retlw	32	;' '
   956  0016  3420               	retlw	32	;' '
   957  0017  3420               	retlw	32	;' '
   958  0018  3420               	retlw	32	;' '
   959  0019  3420               	retlw	32	;' '
   960  001A  3420               	retlw	0
   961  001B  3400               psect	strings
   962                           	
   963                           STR_2:	
   964  001C                     	retlw	84	;'T'
   965  001C  3454               	retlw	69	;'E'
   966  001D  3445               	retlw	82	;'R'
   967  001E  3452               	retlw	84	;'T'
   968  001F  3454               	retlw	79	;'O'
   969  0020  344F               	retlw	83	;'S'
   970  0021  3453               	retlw	32	;' '
   971  0022  3420               	retlw	84	;'T'
   972  0023  3454               	retlw	69	;'E'
   973  0024  3445               	retlw	75	;'K'
   974  0025  344B               	retlw	32	;' '
   975  0026  3420               	retlw	32	;' '
   976  0027  3420               	retlw	32	;' '
   977  0028  3420               	retlw	32	;' '
   978  0029  3420               	retlw	32	;' '
   979  002A  3420               	retlw	32	;' '
   980  002B  3420               	retlw	32	;' '
   981  002C  3420               	retlw	0
   982  002D  3400               psect	strings
   983                           	
   984                           STR_3:	
   985  002E                     	retlw	79	;'O'
   986  002E  344F               	retlw	80	;'P'
   987  002F  3450               	retlw	69	;'E'
   988  0030  3445               	retlw	82	;'R'
   989  0031  3452               	retlw	65	;'A'
   990  0032  3441               	retlw	67	;'C'
   991  0033  3443               	retlw	65	;'A'
   992  0034  3441               	retlw	79	;'O'
   993  0035  344F               	retlw	32	;' '
   994  0036  3420               	retlw	67	;'C'
   995  0037  3443               	retlw	58	;':'
   996  0038  343A               	retlw	32	;' '
   997  0039  3420               	retlw	67	;'C'
   998  003A  3443               	retlw	70	;'F'
   999  003B  3446               	retlw	71	;'G'
  1000  003C  3447               	retlw	32	;' '
  1001  003D  3420               	retlw	32	;' '
  1002  003E  3420               	retlw	0
  1003  003F  3400               psect	strings
  1004                           	
  1005                           STR_1:	
  1006  0040                     	retlw	66	;'B'
  1007  0040  3442               	retlw	69	;'E'
  1008  0041  3445               	retlw	77	;'M'
  1009  0042  344D               	retlw	32	;' '
  1010  0043  3420               	retlw	86	;'V'
  1011  0044  3456               	retlw	73	;'I'
  1012  0045  3449               	retlw	78	;'N'
  1013  0046  344E               	retlw	68	;'D'
  1014  0047  3444               	retlw	79	;'O'
  1015  0048  344F               	retlw	32	;' '
  1016  0049  3420               	retlw	32	;' '
  1017  004A  3420               	retlw	32	;' '
  1018  004B  3420               	retlw	32	;' '
  1019  004C  3420               	retlw	32	;' '
  1020  004D  3420               	retlw	32	;' '
  1021  004E  3420               	retlw	32	;' '
  1022  004F  3420               	retlw	0
  1023  0050  3400               psect	strings
  1024                           	
  1025                           STR_5:	
  1026  0051                     	retlw	67	;'C'
  1027  0051  3443               	retlw	79	;'O'
  1028  0052  344F               	retlw	78	;'N'
  1029  0053  344E               	retlw	70	;'F'
  1030  0054  3446               	retlw	73	;'I'
  1031  0055  3449               	retlw	71	;'G'
  1032  0056  3447               	retlw	85	;'U'
  1033  0057  3455               	retlw	82	;'R'
  1034  0058  3452               	retlw	65	;'A'
  1035  0059  3441               	retlw	67	;'C'
  1036  005A  3443               	retlw	65	;'A'
  1037  005B  3441               	retlw	79	;'O'
  1038  005C  344F               	retlw	32	;' '
  1039  005D  3420               	retlw	32	;' '
  1040  005E  3420               	retlw	32	;' '
  1041  005F  3420               	retlw	32	;' '
  1042  0060  3420               	retlw	0
  1043  0061  3400               psect	strings
  1044                           ; #config settings
  1045                           global __CFG_FOSC$INTRC_NOCLKOUT
  1046                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1047  0000                     global __CFG_WDTE$OFF
  1048                           __CFG_WDTE$OFF equ 0x0
  1049  0000                     global __CFG_PWRTE$OFF
  1050                           __CFG_PWRTE$OFF equ 0x0
  1051  0000                     global __CFG_MCLRE$OFF
  1052                           __CFG_MCLRE$OFF equ 0x0
  1053  0000                     global __CFG_CP$OFF
  1054                           __CFG_CP$OFF equ 0x0
  1055  0000                     global __CFG_CPD$OFF
  1056                           __CFG_CPD$OFF equ 0x0
  1057  0000                     global __CFG_BOREN$OFF
  1058                           __CFG_BOREN$OFF equ 0x0
  1059  0000                     global __CFG_IESO$OFF
  1060                           __CFG_IESO$OFF equ 0x0
  1061  0000                     global __CFG_FCMEN$OFF
  1062                           __CFG_FCMEN$OFF equ 0x0
  1063  0000                     global __CFG_LVP$OFF
  1064                           __CFG_LVP$OFF equ 0x0
  1065  0000                     global __CFG_BOR4V$BOR40V
  1066                           __CFG_BOR4V$BOR40V equ 0x0
  1067  0000                     global __CFG_WRT$OFF
  1068                           __CFG_WRT$OFF equ 0x0
  1069  0000                     	file	"C:\Users\20185147\AppData\Local\Temp\s1h4."
  1070                           	line	#
  1071                           psect cinit,class=CODE,delta=2
  1072                           global start_initialization
  1073                           start_initialization:
  1074  07EA                     
  1075                           global __initialization
  1076                           __initialization:
  1077  07EA                     psect	bssBANK0,class=BANK0,space=1,noexec
  1078                           global __pbssBANK0
  1079                           __pbssBANK0:
  1080  0041                     main@F1283:
  1081  0041                            ds      4
  1082  0041                     
  1083                           psect	dataBANK0,class=BANK0,space=1,noexec
  1084                           global __pdataBANK0
  1085                           __pdataBANK0:
  1086  0020                     	file	"teclado.c"
  1087                           	line	23
  1088                           _tabela:
  1089  0020                            ds      16
  1090  0020                     
  1091                           psect	dataBANK0
  1092                           	file	"man.c"
  1093                           	line	19
  1094                           main@F1285:
  1095  0030                            ds      4
  1096  0030                     
  1097                           	file	"C:\Users\20185147\AppData\Local\Temp\s1h4."
  1098                           	line	#
  1099                           global btemp
  1100                           psect inittext,class=CODE,delta=2
  1101                           global init_fetch0,btemp
  1102                           ;	Called with low address in FSR and high address in W
  1103                           init_fetch0:
  1104  04C7                     	movf btemp,w
  1105  04C7  087E               	movwf pclath
  1106  04C8  008A               	movf btemp+1,w
  1107  04C9  087F               	movwf pc
  1108  04CA  0082               global init_ram0
  1109                           ;Called with:
  1110                           ;	high address of idata address in btemp 
  1111                           ;	low address of idata address in btemp+1 
  1112                           ;	low address of data in FSR
  1113                           ;	high address + 1 of data in btemp-1
  1114                           init_ram0:
  1115  04CB                     	fcall init_fetch0
  1116  04CB  120A  118A  24C7  120A  118A  	movwf indf,f
  1117  04D0  0080               	incf fsr,f
  1118  04D1  0A84               	movf fsr,w
  1119  04D2  0804               	xorwf btemp-1,w
  1120  04D3  067D               	btfsc status,2
  1121  04D4  1903               	retlw 0
  1122  04D5  3400               	incf btemp+1,f
  1123  04D6  0AFF               	btfsc status,2
  1124  04D7  1903               	incf btemp,f
  1125  04D8  0AFE               	goto init_ram0
  1126  04D9  2CCB               ; Initialize objects allocated to BANK0
  1127                           psect cinit,class=CODE,delta=2,merge=1
  1128                           global init_ram0, __pidataBANK0
  1129                           	bcf	status, 7	;select IRP bank0
  1130  07EA  1383               	movlw low(__pdataBANK0+20)
  1131  07EB  3034               	movwf btemp-1,f
  1132  07EC  00FD               	movlw high(__pidataBANK0)
  1133  07ED  3004               	movwf btemp,f
  1134  07EE  00FE               	movlw low(__pidataBANK0)
  1135  07EF  30DA               	movwf btemp+1,f
  1136  07F0  00FF               	movlw low(__pdataBANK0)
  1137  07F1  3020               	movwf fsr,f
  1138  07F2  0084               	fcall init_ram0
  1139  07F3  120A  118A  24CB  120A  118A  	line	#
  1140                           ; Clear objects allocated to BANK0
  1141                           psect cinit,class=CODE,delta=2,merge=1
  1142                           	clrf	((__pbssBANK0)+0)&07Fh
  1143  07F8  01C1               	clrf	((__pbssBANK0)+1)&07Fh
  1144  07F9  01C2               	clrf	((__pbssBANK0)+2)&07Fh
  1145  07FA  01C3               	clrf	((__pbssBANK0)+3)&07Fh
  1146  07FB  01C4               psect cinit,class=CODE,delta=2,merge=1
  1147                           global end_of_initialization,__end_of__initialization
  1148                           
  1149                           ;End of C runtime variable initialization code
  1150                           
  1151                           end_of_initialization:
  1152  07FC                     __end_of__initialization:
  1153  07FC                     clrf status
  1154  07FC  0183               ljmp _main	;jump to C main() function
  1155  07FD  120A  118A  2EC9   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1156                           global __pcstackCOMMON
  1157                           __pcstackCOMMON:
  1158  0070                     ?_delay:	; 1 bytes @ 0x0
  1159  0070                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
  1160  0070                     ??_dispLCD_instReg:	; 1 bytes @ 0x0
  1161  0070                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
  1162  0070                     ??_dispLCD_dataReg:	; 1 bytes @ 0x0
  1163  0070                     ?_dispLCD_init:	; 1 bytes @ 0x0
  1164  0070                     ?_teclado_init:	; 1 bytes @ 0x0
  1165  0070                     ??_teclado_init:	; 1 bytes @ 0x0
  1166  0070                     ?_teclado:	; 1 bytes @ 0x0
  1167  0070                     ??_teclado:	; 1 bytes @ 0x0
  1168  0070                     ?_main:	; 1 bytes @ 0x0
  1169  0070                     	global	delay@t
  1170                           delay@t:	; 2 bytes @ 0x0
  1171  0070                     	ds	1
  1172  0070                     	global	teclado@tecla
  1173                           teclado@tecla:	; 1 bytes @ 0x1
  1174  0071                     	ds	1
  1175  0071                     ??_delay:	; 1 bytes @ 0x2
  1176  0072                     	global	dispLCD_instReg@i
  1177                           dispLCD_instReg@i:	; 1 bytes @ 0x2
  1178  0072                     	global	dispLCD_dataReg@d
  1179                           dispLCD_dataReg@d:	; 1 bytes @ 0x2
  1180  0072                     	global	teclado@i
  1181                           teclado@i:	; 1 bytes @ 0x2
  1182  0072                     	ds	1
  1183  0072                     ?_dispLCD_lincol:	; 1 bytes @ 0x3
  1184  0073                     ??_dispLCD_init:	; 1 bytes @ 0x3
  1185  0073                     	global	dispLCD_lincol@col
  1186                           dispLCD_lincol@col:	; 1 bytes @ 0x3
  1187  0073                     	ds	1
  1188  0073                     ??_dispLCD_lincol:	; 1 bytes @ 0x4
  1189  0074                     	ds	1
  1190  0074                     	global	dispLCD_lincol@lin
  1191                           dispLCD_lincol@lin:	; 1 bytes @ 0x5
  1192  0075                     	ds	1
  1193  0075                     ?_dispLCD:	; 1 bytes @ 0x6
  1194  0076                     	global	dispLCD@col
  1195                           dispLCD@col:	; 1 bytes @ 0x6
  1196  0076                     	ds	1
  1197  0076                     	global	dispLCD@str
  1198                           dispLCD@str:	; 1 bytes @ 0x7
  1199  0077                     	ds	1
  1200  0077                     ??_dispLCD:	; 1 bytes @ 0x8
  1201  0078                     	ds	1
  1202  0078                     	global	dispLCD@pos
  1203                           dispLCD@pos:	; 1 bytes @ 0x9
  1204  0079                     	ds	1
  1205  0079                     	global	dispLCD@lin
  1206                           dispLCD@lin:	; 1 bytes @ 0xA
  1207  007A                     	ds	1
  1208  007A                     ??_main:	; 1 bytes @ 0xB
  1209  007B                     	ds	2
  1210  007B                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1211                           global __pcstackBANK0
  1212                           __pcstackBANK0:
  1213  0034                     	global	main@senha_correta
  1214                           main@senha_correta:	; 4 bytes @ 0x0
  1215  0034                     	ds	4
  1216  0034                     	global	main@senhaOK
  1217                           main@senhaOK:	; 1 bytes @ 0x4
  1218  0038                     	ds	1
  1219  0038                     	global	main@senha
  1220                           main@senha:	; 4 bytes @ 0x5
  1221  0039                     	ds	4
  1222  0039                     	global	main@estado_senha
  1223                           main@estado_senha:	; 1 bytes @ 0x9
  1224  003D                     	ds	1
  1225  003D                     	global	main@cont_senha
  1226                           main@cont_senha:	; 1 bytes @ 0xA
  1227  003E                     	ds	1
  1228  003E                     	global	main@estado
  1229                           main@estado:	; 1 bytes @ 0xB
  1230  003F                     	ds	1
  1231  003F                     	global	main@tecla
  1232                           main@tecla:	; 1 bytes @ 0xC
  1233  0040                     	ds	1
  1234  0040                     ;!
  1235                           ;!Data Sizes:
  1236                           ;!    Strings     89
  1237                           ;!    Constant    0
  1238                           ;!    Data        20
  1239                           ;!    BSS         4
  1240                           ;!    Persistent  0
  1241                           ;!    Stack       0
  1242                           ;!
  1243                           ;!Auto Spaces:
  1244                           ;!    Space          Size  Autos    Used
  1245                           ;!    COMMON           14     13      13
  1246                           ;!    BANK0            80     13      37
  1247                           ;!    BANK1            80      0       0
  1248                           ;!    BANK3            96      0       0
  1249                           ;!    BANK2            96      0       0
  1250                           
  1251                           ;!
  1252                           ;!Pointer List with Targets:
  1253                           ;!
  1254                           ;!    dispLCD@str	PTR const unsigned char  size(1) Largest target is 19
  1255                           ;!		 -> STR_5(CODE[17]), STR_4(CODE[19]), STR_3(CODE[18]), STR_2(CODE[18]), 
  1256                           ;!		 -> STR_1(CODE[17]), 
  1257                           ;!
  1258                           
  1259                           
  1260                           ;!
  1261                           ;!Critical Paths under _main in COMMON
  1262                           ;!
  1263                           ;!    _main->_dispLCD
  1264                           ;!    _dispLCD_init->_dispLCD_instReg
  1265                           ;!    _dispLCD->_dispLCD_lincol
  1266                           ;!    _dispLCD_lincol->_dispLCD_instReg
  1267                           ;!
  1268                           ;!Critical Paths under _main in BANK0
  1269                           ;!
  1270                           ;!    None.
  1271                           ;!
  1272                           ;!Critical Paths under _main in BANK1
  1273                           ;!
  1274                           ;!    None.
  1275                           ;!
  1276                           ;!Critical Paths under _main in BANK3
  1277                           ;!
  1278                           ;!    None.
  1279                           ;!
  1280                           ;!Critical Paths under _main in BANK2
  1281                           ;!
  1282                           ;!    None.
  1283                           
  1284 ;;
  1285 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1286 ;;
  1287                           
  1288                           ;!
  1289                           ;!Call Graph Tables:
  1290                           ;!
  1291                           ;! ---------------------------------------------------------------------------------
  1292                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1293                           ;! ---------------------------------------------------------------------------------
  1294                           ;! (0) _main                                                15    15      0    2310
  1295                           ;!                                             11 COMMON     2     2      0
  1296                           ;!                                              0 BANK0     13    13      0
  1297                           ;!                              _delay
  1298                           ;!                            _dispLCD
  1299                           ;!                       _dispLCD_init
  1300                           ;!                            _teclado
  1301                           ;!                       _teclado_init
  1302                           ;! ---------------------------------------------------------------------------------
  1303                           ;! (1) _teclado_init                                         0     0      0       0
  1304                           ;! ---------------------------------------------------------------------------------
  1305                           ;! (1) _teclado                                              3     3      0     387
  1306                           ;!                                              0 COMMON     3     3      0
  1307                           ;! ---------------------------------------------------------------------------------
  1308                           ;! (1) _dispLCD_init                                         0     0      0     176
  1309                           ;!                    _dispLCD_instReg
  1310                           ;! ---------------------------------------------------------------------------------
  1311                           ;! (1) _dispLCD                                              5     3      2    1289
  1312                           ;!                                              6 COMMON     5     3      2
  1313                           ;!                    _dispLCD_dataReg
  1314                           ;!                     _dispLCD_lincol
  1315                           ;! ---------------------------------------------------------------------------------
  1316                           ;! (2) _dispLCD_lincol                                       3     2      1     372
  1317                           ;!                                              3 COMMON     3     2      1
  1318                           ;!                    _dispLCD_instReg
  1319                           ;! ---------------------------------------------------------------------------------
  1320                           ;! (2) _dispLCD_instReg                                      3     3      0     176
  1321                           ;!                                              0 COMMON     3     3      0
  1322                           ;! ---------------------------------------------------------------------------------
  1323                           ;! (2) _dispLCD_dataReg                                      3     3      0      44
  1324                           ;!                                              0 COMMON     3     3      0
  1325                           ;! ---------------------------------------------------------------------------------
  1326                           ;! (1) _delay                                                3     1      2      99
  1327                           ;!                                              0 COMMON     3     1      2
  1328                           ;! ---------------------------------------------------------------------------------
  1329                           ;! Estimated maximum stack depth 2
  1330                           ;! ---------------------------------------------------------------------------------
  1331                           ;!
  1332                           ;! Call Graph Graphs:
  1333                           ;!
  1334                           ;! _main (ROOT)
  1335                           ;!   _delay
  1336                           ;!   _dispLCD
  1337                           ;!     _dispLCD_dataReg
  1338                           ;!     _dispLCD_lincol
  1339                           ;!       _dispLCD_instReg
  1340                           ;!   _dispLCD_init
  1341                           ;!     _dispLCD_instReg
  1342                           ;!   _teclado
  1343                           ;!   _teclado_init
  1344                           ;!
  1345                           
  1346                           ;! Address spaces:
  1347                           
  1348                           ;!Name               Size   Autos  Total    Cost      Usage
  1349                           ;!BANK3               60      0       0       9        0.0%
  1350                           ;!BITBANK3            60      0       0       8        0.0%
  1351                           ;!SFR3                 0      0       0       4        0.0%
  1352                           ;!BITSFR3              0      0       0       4        0.0%
  1353                           ;!BANK2               60      0       0      11        0.0%
  1354                           ;!BITBANK2            60      0       0      10        0.0%
  1355                           ;!SFR2                 0      0       0       5        0.0%
  1356                           ;!BITSFR2              0      0       0       5        0.0%
  1357                           ;!BANK1               50      0       0       7        0.0%
  1358                           ;!BITBANK1            50      0       0       6        0.0%
  1359                           ;!SFR1                 0      0       0       2        0.0%
  1360                           ;!BITSFR1              0      0       0       2        0.0%
  1361                           ;!BANK0               50      D      25       5       46.3%
  1362                           ;!BITBANK0            50      0       0       4        0.0%
  1363                           ;!SFR0                 0      0       0       1        0.0%
  1364                           ;!BITSFR0              0      0       0       1        0.0%
  1365                           ;!COMMON               E      D       D       1       92.9%
  1366                           ;!BITCOMMON            E      0       0       0        0.0%
  1367                           ;!CODE                 0      0       0       0        0.0%
  1368                           ;!DATA                 0      0      32      12        0.0%
  1369                           ;!ABS                  0      0      32       3        0.0%
  1370                           ;!NULL                 0      0       0       0        0.0%
  1371                           ;!STACK                0      0       0       2        0.0%
  1372                           ;!EEDATA             100      0       0       0        0.0%
  1373                           
  1374                           	global	_main
  1375                           
  1376 ;; *************** function _main *****************
  1377 ;; Defined at:
  1378 ;;		line 14 in file "man.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  senha           4    5[BANK0 ] unsigned char [4]
  1383 ;;  senha_corret    4    0[BANK0 ] unsigned char [4]
  1384 ;;  tecla           1   12[BANK0 ] unsigned char 
  1385 ;;  estado          1   11[BANK0 ] unsigned char 
  1386 ;;  cont_senha      1   10[BANK0 ] unsigned char 
  1387 ;;  estado_senha    1    9[BANK0 ] unsigned char 
  1388 ;;  senhaOK         1    4[BANK0 ] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : B00/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0      13       0       0       0
  1400 ;;      Temps:          2       0       0       0       0
  1401 ;;      Totals:         2      13       0       0       0
  1402 ;;Total ram usage:       15 bytes
  1403 ;; Hardware stack levels required when called:    3
  1404 ;; This function calls:
  1405 ;;		_delay
  1406 ;;		_dispLCD
  1407 ;;		_dispLCD_init
  1408 ;;		_teclado
  1409 ;;		_teclado_init
  1410 ;; This function is called by:
  1411 ;;		Startup code after reset
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1415                           	file	"man.c"
  1416                           	line	14
  1417                           global __pmaintext
  1418                           __pmaintext:	;psect for function _main
  1419  06C9                     psect	maintext
  1420                           	file	"man.c"
  1421                           	line	14
  1422                           	global	__size_of_main
  1423                           	__size_of_main	equ	__end_of_main-_main
  1424  0121                     	
  1425                           _main:	
  1426  06C9                     ;incstack = 0
  1427                           	opt	stack 5
  1428                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1429                           	line	16
  1430                           	
  1431                           l1243:	
  1432  06C9                     ;man.c: 16:     char cont_senha = 0;
  1433                           	bcf	status, 5	;RP0=0, select bank0
  1434  06C9  1283               	bcf	status, 6	;RP1=0, select bank0
  1435  06CA  1303               	clrf	(main@cont_senha)
  1436  06CB  01BE               	line	17
  1437                           ;man.c: 17:     char senhaOK = 0;
  1438                           	clrf	(main@senhaOK)
  1439  06CC  01B8               	line	18
  1440                           ;man.c: 18:     char estado_senha = 0;
  1441                           	clrf	(main@estado_senha)
  1442  06CD  01BD               	line	19
  1443                           	
  1444                           l1245:	
  1445  06CE                     ;man.c: 19:     char senha[4] = {0,0,0,0};
  1446                           	movf	(main@F1283+3),w
  1447  06CE  0844               	movwf	(main@senha+3)
  1448  06CF  00BC               	movf	(main@F1283+2),w
  1449  06D0  0843               	movwf	(main@senha+2)
  1450  06D1  00BB               	movf	(main@F1283+1),w
  1451  06D2  0842               	movwf	(main@senha+1)
  1452  06D3  00BA               	movf	(main@F1283),w
  1453  06D4  0841               	movwf	(main@senha)
  1454  06D5  00B9               
  1455                           	line	20
  1456                           	
  1457                           l1247:	
  1458  06D6                     ;man.c: 20:     char senha_correta [4] = {'2','1','1','8'};
  1459                           	movf	(main@F1285+3),w
  1460  06D6  0833               	movwf	(main@senha_correta+3)
  1461  06D7  00B7               	movf	(main@F1285+2),w
  1462  06D8  0832               	movwf	(main@senha_correta+2)
  1463  06D9  00B6               	movf	(main@F1285+1),w
  1464  06DA  0831               	movwf	(main@senha_correta+1)
  1465  06DB  00B5               	movf	(main@F1285),w
  1466  06DC  0830               	movwf	(main@senha_correta)
  1467  06DD  00B4               
  1468                           	line	23
  1469                           ;man.c: 23:     char estado = 0;
  1470                           	clrf	(main@estado)
  1471  06DE  01BF               	line	24
  1472                           ;man.c: 24:     char tecla = 0;
  1473                           	clrf	(main@tecla)
  1474  06DF  01C0               	line	25
  1475                           	
  1476                           l1249:	
  1477  06E0                     ;man.c: 25:     dispLCD_init();
  1478                           	fcall	_dispLCD_init
  1479  06E0  120A  118A  2505  120A  118A  	line	26
  1480                           	
  1481                           l1251:	
  1482  06E5                     ;man.c: 26:     teclado_init();
  1483                           	fcall	_teclado_init
  1484  06E5  120A  118A  24A9  120A  118A  	goto	l1253
  1485  06EA  2EEB               	line	27
  1486                           ;man.c: 27:     while( 1 )
  1487                           	
  1488                           l106:	
  1489  06EB                     	line	29
  1490                           	
  1491                           l1253:	
  1492  06EB                     ;man.c: 28:    {;man.c: 29:         tecla = teclado();
  1493                           	fcall	_teclado
  1494  06EB  120A  118A  260B  120A  118A  	movwf	(??_main+0)+0
  1495  06F0  00FB               	movf	(??_main+0)+0,w
  1496  06F1  087B               	bcf	status, 5	;RP0=0, select bank0
  1497  06F2  1283               	bcf	status, 6	;RP1=0, select bank0
  1498  06F3  1303               	movwf	(main@tecla)
  1499  06F4  00C0               	line	30
  1500                           ;man.c: 30:         switch ( estado )
  1501                           	goto	l1285
  1502  06F5  2F76               	line	32
  1503                           ;man.c: 31:         {;man.c: 32:             case 0:
  1504                           	
  1505                           l108:	
  1506  06F6                     	line	33
  1507                           ;man.c: 33:                     estado = 1;
  1508                           	clrf	(main@estado)
  1509  06F6  01BF               	incf	(main@estado),f
  1510  06F7  0ABF               	line	34
  1511                           ;man.c: 34:                     break;
  1512                           	goto	l1253
  1513  06F8  2EEB               	line	35
  1514                           ;man.c: 35:             case 1:
  1515                           	
  1516                           l110:	
  1517  06F9                     	line	36
  1518                           	
  1519                           l1255:	
  1520  06F9                     ;man.c: 36:                     dispLCD(0,0, "BEM VINDO       ");
  1521                           	clrf	(dispLCD@col)
  1522  06F9  01F6               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1523  06FA  3038               	movwf	(??_main+0)+0
  1524  06FB  00FB               	movf	(??_main+0)+0,w
  1525  06FC  087B               	movwf	(dispLCD@str)
  1526  06FD  00F7               	movlw	low(0)
  1527  06FE  3000               	fcall	_dispLCD
  1528  06FF  120A  118A  2558  120A  118A  	line	37
  1529                           	
  1530                           l1257:	
  1531  0704                     ;man.c: 37:                     delay(3000);
  1532                           	movlw	0B8h
  1533  0704  30B8               	movwf	(delay@t)
  1534  0705  00F0               	movlw	0Bh
  1535  0706  300B               	movwf	((delay@t))+1
  1536  0707  00F1               	fcall	_delay
  1537  0708  120A  118A  24EE  120A  118A  	line	38
  1538                           	
  1539                           l1259:	
  1540  070D                     ;man.c: 38:                     estado = 10;
  1541                           	movlw	low(0Ah)
  1542  070D  300A               	movwf	(??_main+0)+0
  1543  070E  00FB               	movf	(??_main+0)+0,w
  1544  070F  087B               	bcf	status, 5	;RP0=0, select bank0
  1545  0710  1283               	bcf	status, 6	;RP1=0, select bank0
  1546  0711  1303               	movwf	(main@estado)
  1547  0712  00BF               	line	39
  1548                           ;man.c: 39:                      break;
  1549                           	goto	l1253
  1550  0713  2EEB               	line	40
  1551                           ;man.c: 40:             case 10:
  1552                           	
  1553                           l111:	
  1554  0714                     	line	41
  1555                           	
  1556                           l1261:	
  1557  0714                     ;man.c: 41:                     dispLCD(0,0,"TERTOS TEK       ");
  1558                           	clrf	(dispLCD@col)
  1559  0714  01F6               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1560  0715  3014               	movwf	(??_main+0)+0
  1561  0716  00FB               	movf	(??_main+0)+0,w
  1562  0717  087B               	movwf	(dispLCD@str)
  1563  0718  00F7               	movlw	low(0)
  1564  0719  3000               	fcall	_dispLCD
  1565  071A  120A  118A  2558  120A  118A  	line	42
  1566                           ;man.c: 42:                     dispLCD(1,0,"OPERACAO C: CFG  ");
  1567                           	clrf	(dispLCD@col)
  1568  071F  01F6               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1569  0720  3026               	movwf	(??_main+0)+0
  1570  0721  00FB               	movf	(??_main+0)+0,w
  1571  0722  087B               	movwf	(dispLCD@str)
  1572  0723  00F7               	movlw	low(01h)
  1573  0724  3001               	fcall	_dispLCD
  1574  0725  120A  118A  2558  120A  118A  	line	43
  1575                           	
  1576                           l1263:	
  1577  072A                     ;man.c: 43:                     if( tecla == '1')
  1578                           		movlw	49
  1579  072A  3031               	bcf	status, 5	;RP0=0, select bank0
  1580  072B  1283               	bcf	status, 6	;RP1=0, select bank0
  1581  072C  1303               	xorwf	((main@tecla)),w
  1582  072D  0640               	btfss	status,2
  1583  072E  1D03               	goto	u801
  1584  072F  2F31               	goto	u800
  1585  0730  2F32               u801:
  1586  0731                     	goto	l1267
  1587  0731  2F37               u800:
  1588  0732                     	line	44
  1589                           	
  1590                           l1265:	
  1591  0732                     ;man.c: 44:                         estado = 20;
  1592                           	movlw	low(014h)
  1593  0732  3014               	movwf	(??_main+0)+0
  1594  0733  00FB               	movf	(??_main+0)+0,w
  1595  0734  087B               	movwf	(main@estado)
  1596  0735  00BF               	goto	l1267
  1597  0736  2F37               	
  1598                           l112:	
  1599  0737                     	line	45
  1600                           	
  1601                           l1267:	
  1602  0737                     ;man.c: 45:                     if( tecla == '0')
  1603                           		movlw	48
  1604  0737  3030               	xorwf	((main@tecla)),w
  1605  0738  0640               	btfss	status,2
  1606  0739  1D03               	goto	u811
  1607  073A  2F3C               	goto	u810
  1608  073B  2F3D               u811:
  1609  073C                     	goto	l1253
  1610  073C  2EEB               u810:
  1611  073D                     	line	46
  1612                           	
  1613                           l1269:	
  1614  073D                     ;man.c: 46:                        estado = 100;
  1615                           	movlw	low(064h)
  1616  073D  3064               	movwf	(??_main+0)+0
  1617  073E  00FB               	movf	(??_main+0)+0,w
  1618  073F  087B               	movwf	(main@estado)
  1619  0740  00BF               	goto	l1253
  1620  0741  2EEB               	
  1621                           l113:	
  1622  0742                     	line	47
  1623                           ;man.c: 47:                         break;
  1624                           	goto	l1253
  1625  0742  2EEB               	line	48
  1626                           ;man.c: 48:             case 20:
  1627                           	
  1628                           l114:	
  1629  0743                     	line	49
  1630                           	
  1631                           l1271:	
  1632  0743                     ;man.c: 49:                     dispLCD(0,0,"operando...       ");
  1633                           	clrf	(dispLCD@col)
  1634  0743  01F6               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  1635  0744  3001               	movwf	(??_main+0)+0
  1636  0745  00FB               	movf	(??_main+0)+0,w
  1637  0746  087B               	movwf	(dispLCD@str)
  1638  0747  00F7               	movlw	low(0)
  1639  0748  3000               	fcall	_dispLCD
  1640  0749  120A  118A  2558  120A  118A  	line	50
  1641                           	
  1642                           l1273:	
  1643  074E                     ;man.c: 50:                     if( tecla == '*')
  1644                           		movlw	42
  1645  074E  302A               	bcf	status, 5	;RP0=0, select bank0
  1646  074F  1283               	bcf	status, 6	;RP1=0, select bank0
  1647  0750  1303               	xorwf	((main@tecla)),w
  1648  0751  0640               	btfss	status,2
  1649  0752  1D03               	goto	u821
  1650  0753  2F55               	goto	u820
  1651  0754  2F56               u821:
  1652  0755                     	goto	l1253
  1653  0755  2EEB               u820:
  1654  0756                     	line	51
  1655                           	
  1656                           l1275:	
  1657  0756                     ;man.c: 51:                     estado = 10;
  1658                           	movlw	low(0Ah)
  1659  0756  300A               	movwf	(??_main+0)+0
  1660  0757  00FB               	movf	(??_main+0)+0,w
  1661  0758  087B               	movwf	(main@estado)
  1662  0759  00BF               	goto	l1253
  1663  075A  2EEB               	
  1664                           l115:	
  1665  075B                     	line	52
  1666                           ;man.c: 52:                        break;
  1667                           	goto	l1253
  1668  075B  2EEB               	line	53
  1669                           ;man.c: 53:             case 30:
  1670                           	
  1671                           l116:	
  1672  075C                     	line	54
  1673                           	
  1674                           l1277:	
  1675  075C                     ;man.c: 54:                       dispLCD(0,0,"CONFIGURACAO    ");
  1676                           	clrf	(dispLCD@col)
  1677  075C  01F6               	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  1678  075D  3049               	movwf	(??_main+0)+0
  1679  075E  00FB               	movf	(??_main+0)+0,w
  1680  075F  087B               	movwf	(dispLCD@str)
  1681  0760  00F7               	movlw	low(0)
  1682  0761  3000               	fcall	_dispLCD
  1683  0762  120A  118A  2558  120A  118A  	line	55
  1684                           	
  1685                           l1279:	
  1686  0767                     ;man.c: 55:                     if( tecla == '#')
  1687                           		movlw	35
  1688  0767  3023               	bcf	status, 5	;RP0=0, select bank0
  1689  0768  1283               	bcf	status, 6	;RP1=0, select bank0
  1690  0769  1303               	xorwf	((main@tecla)),w
  1691  076A  0640               	btfss	status,2
  1692  076B  1D03               	goto	u831
  1693  076C  2F6E               	goto	u830
  1694  076D  2F6F               u831:
  1695  076E                     	goto	l1253
  1696  076E  2EEB               u830:
  1697  076F                     	line	56
  1698                           	
  1699                           l1281:	
  1700  076F                     ;man.c: 56:                     estado = 10;
  1701                           	movlw	low(0Ah)
  1702  076F  300A               	movwf	(??_main+0)+0
  1703  0770  00FB               	movf	(??_main+0)+0,w
  1704  0771  087B               	movwf	(main@estado)
  1705  0772  00BF               	goto	l1253
  1706  0773  2EEB               	
  1707                           l117:	
  1708  0774                     	line	57
  1709                           ;man.c: 57:                        break;
  1710                           	goto	l1253
  1711  0774  2EEB               	line	58
  1712                           	
  1713                           l1283:	
  1714  0775                     ;man.c: 58: } }
  1715                           	goto	l1253
  1716  0775  2EEB               	
  1717                           l107:	
  1718  0776                     	
  1719                           l1285:	
  1720  0776                     	movf	(main@estado),w
  1721  0776  083F               	movwf	(??_main+0)+0
  1722  0777  00FB               	clrf	(??_main+0)+0+1
  1723  0778  01FC               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1724                           ; Switch size 1, requested type "space"
  1725                           ; Number of cases is 1, Range of values is 0 to 0
  1726                           ; switch strategies available:
  1727                           ; Name         Instructions Cycles
  1728                           ; simple_byte            4     3 (average)
  1729                           ; direct_byte           11     8 (fixed)
  1730                           ; jumptable            260     6 (fixed)
  1731                           ;	Chosen strategy is simple_byte
  1732                           
  1733                           	movf 1+(??_main+0)+0,w
  1734  0779  087C               	opt asmopt_push
  1735                           	opt asmopt_off
  1736                           	xorlw	0^0	; case 0
  1737  077A  3A00               	skipnz
  1738  077B  1903               	goto	l1383
  1739  077C  2F7E               	goto	l1253
  1740  077D  2EEB               	opt asmopt_pop
  1741                           	
  1742                           l1383:	
  1743  077E                     ; Switch size 1, requested type "space"
  1744                           ; Number of cases is 5, Range of values is 0 to 30
  1745                           ; switch strategies available:
  1746                           ; Name         Instructions Cycles
  1747                           ; simple_byte           16     9 (average)
  1748                           ; direct_byte          101     8 (fixed)
  1749                           ; jumptable            260     6 (fixed)
  1750                           ;	Chosen strategy is simple_byte
  1751                           
  1752                           	movf 0+(??_main+0)+0,w
  1753  077E  087B               	opt asmopt_push
  1754                           	opt asmopt_off
  1755                           	xorlw	0^0	; case 0
  1756  077F  3A00               	skipnz
  1757  0780  1903               	goto	l108
  1758  0781  2EF6               	xorlw	1^0	; case 1
  1759  0782  3A01               	skipnz
  1760  0783  1903               	goto	l1255
  1761  0784  2EF9               	xorlw	10^1	; case 10
  1762  0785  3A0B               	skipnz
  1763  0786  1903               	goto	l1261
  1764  0787  2F14               	xorlw	20^10	; case 20
  1765  0788  3A1E               	skipnz
  1766  0789  1903               	goto	l1271
  1767  078A  2F43               	xorlw	30^20	; case 30
  1768  078B  3A0A               	skipnz
  1769  078C  1903               	goto	l1277
  1770  078D  2F5C               	goto	l1253
  1771  078E  2EEB               	opt asmopt_pop
  1772                           
  1773                           	
  1774                           l109:	
  1775  078F                     	goto	l1253
  1776  078F  2EEB               	
  1777                           l118:	
  1778  0790                     	goto	l1253
  1779  0790  2EEB               	
  1780                           l119:	
  1781  0791                     	line	60
  1782                           ;man.c: 60:          switch(estado_senha)
  1783                           	goto	l1309
  1784  0791  2FCE               	line	62
  1785                           ;man.c: 61:          {;man.c: 62:             case 0:
  1786                           	
  1787                           l121:	
  1788  0792                     	line	63
  1789                           ;man.c: 63:                     break;
  1790                           	goto	l130
  1791  0792  2FE7               	line	64
  1792                           ;man.c: 64:             case 10:
  1793                           	
  1794                           l123:	
  1795  0793                     	line	65
  1796                           	
  1797                           l1287:	
  1798  0793                     ;man.c: 65:                     cont_senha = 0;
  1799                           	clrf	(main@cont_senha)
  1800  0793  01BE               	line	66
  1801                           ;man.c: 66:                     senha[0] = 0;
  1802                           	clrf	(main@senha)
  1803  0794  01B9               	line	67
  1804                           ;man.c: 67:                     senha[1] = 0;
  1805                           	clrf	0+(main@senha)+01h
  1806  0795  01BA               	line	68
  1807                           ;man.c: 68:                     senha[2] = 0;
  1808                           	clrf	0+(main@senha)+02h
  1809  0796  01BB               	line	69
  1810                           ;man.c: 69:                     senha[3] = 0;
  1811                           	clrf	0+(main@senha)+03h
  1812  0797  01BC               	line	70
  1813                           ;man.c: 70:                     break;
  1814                           	goto	l130
  1815  0798  2FE7               	line	71
  1816                           ;man.c: 71:             case 12:
  1817                           	
  1818                           l124:	
  1819  0799                     	line	72
  1820                           	
  1821                           l1289:	
  1822  0799                     ;man.c: 72:                     if( tecla >= '0' && tecla <= '9')
  1823                           	movlw	low(030h)
  1824  0799  3030               	subwf	(main@tecla),w
  1825  079A  0240               	skipc
  1826  079B  1C03               	goto	u841
  1827  079C  2F9E               	goto	u840
  1828  079D  2F9F               u841:
  1829  079E                     	goto	l130
  1830  079E  2FE7               u840:
  1831  079F                     	
  1832                           l1291:	
  1833  079F                     	movlw	low(03Ah)
  1834  079F  303A               	subwf	(main@tecla),w
  1835  07A0  0240               	skipnc
  1836  07A1  1803               	goto	u851
  1837  07A2  2FA4               	goto	u850
  1838  07A3  2FA5               u851:
  1839  07A4                     	goto	l130
  1840  07A4  2FE7               u850:
  1841  07A5                     	line	73
  1842                           	
  1843                           l1293:	
  1844  07A5                     ;man.c: 73:                         estado_senha = 14;
  1845                           	movlw	low(0Eh)
  1846  07A5  300E               	movwf	(??_main+0)+0
  1847  07A6  00FB               	movf	(??_main+0)+0,w
  1848  07A7  087B               	movwf	(main@estado_senha)
  1849  07A8  00BD               	goto	l130
  1850  07A9  2FE7               	
  1851                           l125:	
  1852  07AA                     	line	74
  1853                           ;man.c: 74:                     break;
  1854                           	goto	l130
  1855  07AA  2FE7               	line	75
  1856                           ;man.c: 75:             case 14:
  1857                           	
  1858                           l126:	
  1859  07AB                     	line	76
  1860                           	
  1861                           l1295:	
  1862  07AB                     ;man.c: 76:                     senha[cont_senha] = tecla;
  1863                           	movf	(main@tecla),w
  1864  07AB  0840               	movwf	(??_main+0)+0
  1865  07AC  00FB               	movf	(main@cont_senha),w
  1866  07AD  083E               	addlw	low(main@senha|((0x0)<<8))&0ffh
  1867  07AE  3E39               	movwf	fsr0
  1868  07AF  0084               	movf	(??_main+0)+0,w
  1869  07B0  087B               	bcf	status, 7	;select IRP bank0
  1870  07B1  1383               	movwf	indf
  1871  07B2  0080               	line	77
  1872                           	
  1873                           l1297:	
  1874  07B3                     ;man.c: 77:                     estado_senha = 16;
  1875                           	movlw	low(010h)
  1876  07B3  3010               	movwf	(??_main+0)+0
  1877  07B4  00FB               	movf	(??_main+0)+0,w
  1878  07B5  087B               	movwf	(main@estado_senha)
  1879  07B6  00BD               	line	78
  1880                           ;man.c: 78:                     break;
  1881                           	goto	l130
  1882  07B7  2FE7               	line	79
  1883                           ;man.c: 79:             case 16:
  1884                           	
  1885                           l127:	
  1886  07B8                     	line	80
  1887                           	
  1888                           l1299:	
  1889  07B8                     ;man.c: 80:                     ++cont_senha;
  1890                           	movlw	low(01h)
  1891  07B8  3001               	movwf	(??_main+0)+0
  1892  07B9  00FB               	movf	(??_main+0)+0,w
  1893  07BA  087B               	addwf	(main@cont_senha),f
  1894  07BB  07BE               	line	81
  1895                           	
  1896                           l1301:	
  1897  07BC                     ;man.c: 81:                     if (cont_senha < 4 )
  1898                           	movlw	low(04h)
  1899  07BC  3004               	subwf	(main@cont_senha),w
  1900  07BD  023E               	skipnc
  1901  07BE  1803               	goto	u861
  1902  07BF  2FC1               	goto	u860
  1903  07C0  2FC2               u861:
  1904  07C1                     	goto	l1305
  1905  07C1  2FC7               u860:
  1906  07C2                     	line	82
  1907                           	
  1908                           l1303:	
  1909  07C2                     ;man.c: 82:                         estado_senha = 12;
  1910                           	movlw	low(0Ch)
  1911  07C2  300C               	movwf	(??_main+0)+0
  1912  07C3  00FB               	movf	(??_main+0)+0,w
  1913  07C4  087B               	movwf	(main@estado_senha)
  1914  07C5  00BD               	goto	l130
  1915  07C6  2FE7               	line	83
  1916                           ;man.c: 83:                     else
  1917                           	
  1918                           l128:	
  1919  07C7                     	line	84
  1920                           	
  1921                           l1305:	
  1922  07C7                     ;man.c: 84:                         estado_senha = 20;
  1923                           	movlw	low(014h)
  1924  07C7  3014               	movwf	(??_main+0)+0
  1925  07C8  00FB               	movf	(??_main+0)+0,w
  1926  07C9  087B               	movwf	(main@estado_senha)
  1927  07CA  00BD               	goto	l130
  1928  07CB  2FE7               	
  1929                           l129:	
  1930  07CC                     	line	85
  1931                           ;man.c: 85:                     break;
  1932                           	goto	l130
  1933  07CC  2FE7               	line	87
  1934                           	
  1935                           l1307:	
  1936  07CD                     ;man.c: 87:          } }
  1937                           	goto	l130
  1938  07CD  2FE7               	
  1939                           l120:	
  1940  07CE                     	
  1941                           l1309:	
  1942  07CE                     	movf	(main@estado_senha),w
  1943  07CE  083D               	movwf	(??_main+0)+0
  1944  07CF  00FB               	clrf	(??_main+0)+0+1
  1945  07D0  01FC               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1946                           ; Switch size 1, requested type "space"
  1947                           ; Number of cases is 1, Range of values is 0 to 0
  1948                           ; switch strategies available:
  1949                           ; Name         Instructions Cycles
  1950                           ; simple_byte            4     3 (average)
  1951                           ; direct_byte           11     8 (fixed)
  1952                           ; jumptable            260     6 (fixed)
  1953                           ;	Chosen strategy is simple_byte
  1954                           
  1955                           	movf 1+(??_main+0)+0,w
  1956  07D1  087C               	opt asmopt_push
  1957                           	opt asmopt_off
  1958                           	xorlw	0^0	; case 0
  1959  07D2  3A00               	skipnz
  1960  07D3  1903               	goto	l1385
  1961  07D4  2FD6               	goto	l130
  1962  07D5  2FE7               	opt asmopt_pop
  1963                           	
  1964                           l1385:	
  1965  07D6                     ; Switch size 1, requested type "space"
  1966                           ; Number of cases is 5, Range of values is 0 to 16
  1967                           ; switch strategies available:
  1968                           ; Name         Instructions Cycles
  1969                           ; simple_byte           16     9 (average)
  1970                           ; direct_byte           59     8 (fixed)
  1971                           ; jumptable            260     6 (fixed)
  1972                           ;	Chosen strategy is simple_byte
  1973                           
  1974                           	movf 0+(??_main+0)+0,w
  1975  07D6  087B               	opt asmopt_push
  1976                           	opt asmopt_off
  1977                           	xorlw	0^0	; case 0
  1978  07D7  3A00               	skipnz
  1979  07D8  1903               	goto	l130
  1980  07D9  2FE7               	xorlw	10^0	; case 10
  1981  07DA  3A0A               	skipnz
  1982  07DB  1903               	goto	l1287
  1983  07DC  2F93               	xorlw	12^10	; case 12
  1984  07DD  3A06               	skipnz
  1985  07DE  1903               	goto	l1289
  1986  07DF  2F99               	xorlw	14^12	; case 14
  1987  07E0  3A02               	skipnz
  1988  07E1  1903               	goto	l1295
  1989  07E2  2FAB               	xorlw	16^14	; case 16
  1990  07E3  3A1E               	skipnz
  1991  07E4  1903               	goto	l1299
  1992  07E5  2FB8               	goto	l130
  1993  07E6  2FE7               	opt asmopt_pop
  1994                           
  1995                           	
  1996                           l122:	
  1997  07E7                     	
  1998                           l130:	
  1999  07E7                     	global	start
  2000                           	ljmp	start
  2001  07E7  120A  118A  2800   	opt stack 0
  2002                           GLOBAL	__end_of_main
  2003                           	__end_of_main:
  2004  07EA                     	signat	_main,89
  2005                           	global	_teclado_init
  2006                           
  2007 ;; *************** function _teclado_init *****************
  2008 ;; Defined at:
  2009 ;;		line 15 in file "teclado.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2023 ;;      Params:         0       0       0       0       0
  2024 ;;      Locals:         0       0       0       0       0
  2025 ;;      Temps:          0       0       0       0       0
  2026 ;;      Totals:         0       0       0       0       0
  2027 ;;Total ram usage:        0 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_main
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2036                           	file	"teclado.c"
  2037                           	line	15
  2038                           global __ptext1
  2039                           __ptext1:	;psect for function _teclado_init
  2040  04A9                     psect	text1
  2041                           	file	"teclado.c"
  2042                           	line	15
  2043                           	global	__size_of_teclado_init
  2044                           	__size_of_teclado_init	equ	__end_of_teclado_init-_teclado_init
  2045  000B                     	
  2046                           _teclado_init:	
  2047  04A9                     ;incstack = 0
  2048                           	opt	stack 7
  2049                           ; Regs used in _teclado_init: [wreg+status,2]
  2050                           	line	17
  2051                           	
  2052                           l1127:	
  2053  04A9                     ;teclado.c: 17:     ANSELH = 0x00;
  2054                           	bsf	status, 5	;RP0=1, select bank3
  2055  04A9  1683               	bsf	status, 6	;RP1=1, select bank3
  2056  04AA  1703               	clrf	(393)^0180h	;volatile
  2057  04AB  0189               	line	18
  2058                           	
  2059                           l1129:	
  2060  04AC                     ;teclado.c: 18:     TRISB = 0xF0;
  2061                           	movlw	low(0F0h)
  2062  04AC  30F0               	bsf	status, 5	;RP0=1, select bank1
  2063  04AD  1683               	bcf	status, 6	;RP1=0, select bank1
  2064  04AE  1303               	movwf	(134)^080h	;volatile
  2065  04AF  0086               	line	19
  2066                           	
  2067                           l1131:	
  2068  04B0                     ;teclado.c: 19:     PORTB = 0;
  2069                           	bcf	status, 5	;RP0=0, select bank0
  2070  04B0  1283               	bcf	status, 6	;RP1=0, select bank0
  2071  04B1  1303               	clrf	(6)	;volatile
  2072  04B2  0186               	line	20
  2073                           	
  2074                           l70:	
  2075  04B3                     	return
  2076  04B3  0008               	opt stack 0
  2077                           GLOBAL	__end_of_teclado_init
  2078                           	__end_of_teclado_init:
  2079  04B4                     	signat	_teclado_init,89
  2080                           	global	_teclado
  2081                           
  2082 ;; *************** function _teclado *****************
  2083 ;; Defined at:
  2084 ;;		line 27 in file "teclado.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  i               1    2[COMMON] unsigned char 
  2089 ;;  tecla           1    1[COMMON] unsigned char 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      unsigned char 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2099 ;;      Params:         0       0       0       0       0
  2100 ;;      Locals:         2       0       0       0       0
  2101 ;;      Temps:          1       0       0       0       0
  2102 ;;      Totals:         3       0       0       0       0
  2103 ;;Total ram usage:        3 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2112                           	line	27
  2113                           global __ptext2
  2114                           __ptext2:	;psect for function _teclado
  2115  060B                     psect	text2
  2116                           	file	"teclado.c"
  2117                           	line	27
  2118                           	global	__size_of_teclado
  2119                           	__size_of_teclado	equ	__end_of_teclado-_teclado
  2120  00BE                     	
  2121                           _teclado:	
  2122  060B                     ;incstack = 0
  2123                           	opt	stack 7
  2124                           ; Regs used in _teclado: [wreg-fsr0h+status,2+status,0]
  2125                           	line	29
  2126                           	
  2127                           l1133:	
  2128  060B                     ;teclado.c: 29:     char tecla = 0;
  2129                           	clrf	(teclado@tecla)
  2130  060B  01F1               	line	31
  2131                           	
  2132                           l1135:	
  2133  060C                     ;teclado.c: 30:     char i;;teclado.c: 31:     PORTB = 0x01;
  2134                           	movlw	low(01h)
  2135  060C  3001               	bcf	status, 5	;RP0=0, select bank0
  2136  060D  1283               	bcf	status, 6	;RP1=0, select bank0
  2137  060E  1303               	movwf	(6)	;volatile
  2138  060F  0086               	line	33
  2139                           	
  2140                           l1137:	
  2141  0610                     ;teclado.c: 33:     for( i=0; i<4; i++ ) if( PORTB & 0x10<<i ) tecla = tabela[0][i];
  2142                           	clrf	(teclado@i)
  2143  0610  01F2               	movlw	low(04h)
  2144  0611  3004               	subwf	(teclado@i),w
  2145  0612  0272               	skipc
  2146  0613  1C03               	goto	u551
  2147  0614  2E16               	goto	u550
  2148  0615  2E17               u551:
  2149  0616                     	goto	l1141
  2150  0616  2E19               u550:
  2151  0617                     	goto	l1149
  2152  0617  2E3C               	
  2153                           l1139:	
  2154  0618                     	goto	l1149
  2155  0618  2E3C               	
  2156                           l75:	
  2157  0619                     	
  2158                           l1141:	
  2159  0619                     	movlw	low(010h)
  2160  0619  3010               	movwf	(??_teclado+0)+0
  2161  061A  00F0               	incf	(teclado@i),w
  2162  061B  0A72               	goto	u564
  2163  061C  2E1F               u565:
  2164  061D                     	clrc
  2165  061D  1003               	rlf	(??_teclado+0)+0,f
  2166  061E  0DF0               u564:
  2167  061F                     	addlw	-1
  2168  061F  3EFF               	skipz
  2169  0620  1D03               	goto	u565
  2170  0621  2E1D               	movf	0+(??_teclado+0)+0,w
  2171  0622  0870               	andwf	(6),w	;volatile
  2172  0623  0506               	btfsc	status,2
  2173  0624  1903               	goto	u571
  2174  0625  2E27               	goto	u570
  2175  0626  2E28               u571:
  2176  0627                     	goto	l1145
  2177  0627  2E31               u570:
  2178  0628                     	
  2179                           l1143:	
  2180  0628                     	movf	(teclado@i),w
  2181  0628  0872               	addlw	low(_tabela|((0x0)<<8))&0ffh
  2182  0629  3E20               	movwf	fsr0
  2183  062A  0084               	bcf	status, 7	;select IRP bank0
  2184  062B  1383               	movf	indf,w
  2185  062C  0800               	movwf	(??_teclado+0)+0
  2186  062D  00F0               	movf	(??_teclado+0)+0,w
  2187  062E  0870               	movwf	(teclado@tecla)
  2188  062F  00F1               	goto	l1145
  2189  0630  2E31               	
  2190                           l77:	
  2191  0631                     	
  2192                           l1145:	
  2193  0631                     	movlw	low(01h)
  2194  0631  3001               	movwf	(??_teclado+0)+0
  2195  0632  00F0               	movf	(??_teclado+0)+0,w
  2196  0633  0870               	addwf	(teclado@i),f
  2197  0634  07F2               	
  2198                           l1147:	
  2199  0635                     	movlw	low(04h)
  2200  0635  3004               	subwf	(teclado@i),w
  2201  0636  0272               	skipc
  2202  0637  1C03               	goto	u581
  2203  0638  2E3A               	goto	u580
  2204  0639  2E3B               u581:
  2205  063A                     	goto	l1141
  2206  063A  2E19               u580:
  2207  063B                     	goto	l1149
  2208  063B  2E3C               	
  2209                           l76:	
  2210  063C                     	line	35
  2211                           	
  2212                           l1149:	
  2213  063C                     ;teclado.c: 35:     PORTB = 0x02;
  2214                           	movlw	low(02h)
  2215  063C  3002               	movwf	(6)	;volatile
  2216  063D  0086               	line	36
  2217                           	
  2218                           l1151:	
  2219  063E                     ;teclado.c: 36:     for( i=0; i<4; i++ ) if( PORTB & 0x10<<i ) tecla = tabela[1][i];
  2220                           	clrf	(teclado@i)
  2221  063E  01F2               	
  2222                           l1153:	
  2223  063F                     	movlw	low(04h)
  2224  063F  3004               	subwf	(teclado@i),w
  2225  0640  0272               	skipc
  2226  0641  1C03               	goto	u591
  2227  0642  2E44               	goto	u590
  2228  0643  2E45               u591:
  2229  0644                     	goto	l1157
  2230  0644  2E47               u590:
  2231  0645                     	goto	l1165
  2232  0645  2E6A               	
  2233                           l1155:	
  2234  0646                     	goto	l1165
  2235  0646  2E6A               	
  2236                           l78:	
  2237  0647                     	
  2238                           l1157:	
  2239  0647                     	movlw	low(010h)
  2240  0647  3010               	movwf	(??_teclado+0)+0
  2241  0648  00F0               	incf	(teclado@i),w
  2242  0649  0A72               	goto	u604
  2243  064A  2E4D               u605:
  2244  064B                     	clrc
  2245  064B  1003               	rlf	(??_teclado+0)+0,f
  2246  064C  0DF0               u604:
  2247  064D                     	addlw	-1
  2248  064D  3EFF               	skipz
  2249  064E  1D03               	goto	u605
  2250  064F  2E4B               	movf	0+(??_teclado+0)+0,w
  2251  0650  0870               	andwf	(6),w	;volatile
  2252  0651  0506               	btfsc	status,2
  2253  0652  1903               	goto	u611
  2254  0653  2E55               	goto	u610
  2255  0654  2E56               u611:
  2256  0655                     	goto	l1161
  2257  0655  2E5F               u610:
  2258  0656                     	
  2259                           l1159:	
  2260  0656                     	movf	(teclado@i),w
  2261  0656  0872               	addlw	low(_tabela|((0x0)<<8)+04h)&0ffh
  2262  0657  3E24               	movwf	fsr0
  2263  0658  0084               	bcf	status, 7	;select IRP bank0
  2264  0659  1383               	movf	indf,w
  2265  065A  0800               	movwf	(??_teclado+0)+0
  2266  065B  00F0               	movf	(??_teclado+0)+0,w
  2267  065C  0870               	movwf	(teclado@tecla)
  2268  065D  00F1               	goto	l1161
  2269  065E  2E5F               	
  2270                           l80:	
  2271  065F                     	
  2272                           l1161:	
  2273  065F                     	movlw	low(01h)
  2274  065F  3001               	movwf	(??_teclado+0)+0
  2275  0660  00F0               	movf	(??_teclado+0)+0,w
  2276  0661  0870               	addwf	(teclado@i),f
  2277  0662  07F2               	
  2278                           l1163:	
  2279  0663                     	movlw	low(04h)
  2280  0663  3004               	subwf	(teclado@i),w
  2281  0664  0272               	skipc
  2282  0665  1C03               	goto	u621
  2283  0666  2E68               	goto	u620
  2284  0667  2E69               u621:
  2285  0668                     	goto	l1157
  2286  0668  2E47               u620:
  2287  0669                     	goto	l1165
  2288  0669  2E6A               	
  2289                           l79:	
  2290  066A                     	line	38
  2291                           	
  2292                           l1165:	
  2293  066A                     ;teclado.c: 38:     PORTB = 0x04;
  2294                           	movlw	low(04h)
  2295  066A  3004               	movwf	(6)	;volatile
  2296  066B  0086               	line	39
  2297                           	
  2298                           l1167:	
  2299  066C                     ;teclado.c: 39:     for( i=0; i<4; i++ ) if( PORTB & 0x10<<i ) tecla = tabela[2][i];
  2300                           	clrf	(teclado@i)
  2301  066C  01F2               	
  2302                           l1169:	
  2303  066D                     	movlw	low(04h)
  2304  066D  3004               	subwf	(teclado@i),w
  2305  066E  0272               	skipc
  2306  066F  1C03               	goto	u631
  2307  0670  2E72               	goto	u630
  2308  0671  2E73               u631:
  2309  0672                     	goto	l1173
  2310  0672  2E75               u630:
  2311  0673                     	goto	l1181
  2312  0673  2E98               	
  2313                           l1171:	
  2314  0674                     	goto	l1181
  2315  0674  2E98               	
  2316                           l81:	
  2317  0675                     	
  2318                           l1173:	
  2319  0675                     	movlw	low(010h)
  2320  0675  3010               	movwf	(??_teclado+0)+0
  2321  0676  00F0               	incf	(teclado@i),w
  2322  0677  0A72               	goto	u644
  2323  0678  2E7B               u645:
  2324  0679                     	clrc
  2325  0679  1003               	rlf	(??_teclado+0)+0,f
  2326  067A  0DF0               u644:
  2327  067B                     	addlw	-1
  2328  067B  3EFF               	skipz
  2329  067C  1D03               	goto	u645
  2330  067D  2E79               	movf	0+(??_teclado+0)+0,w
  2331  067E  0870               	andwf	(6),w	;volatile
  2332  067F  0506               	btfsc	status,2
  2333  0680  1903               	goto	u651
  2334  0681  2E83               	goto	u650
  2335  0682  2E84               u651:
  2336  0683                     	goto	l1177
  2337  0683  2E8D               u650:
  2338  0684                     	
  2339                           l1175:	
  2340  0684                     	movf	(teclado@i),w
  2341  0684  0872               	addlw	low(_tabela|((0x0)<<8)+08h)&0ffh
  2342  0685  3E28               	movwf	fsr0
  2343  0686  0084               	bcf	status, 7	;select IRP bank0
  2344  0687  1383               	movf	indf,w
  2345  0688  0800               	movwf	(??_teclado+0)+0
  2346  0689  00F0               	movf	(??_teclado+0)+0,w
  2347  068A  0870               	movwf	(teclado@tecla)
  2348  068B  00F1               	goto	l1177
  2349  068C  2E8D               	
  2350                           l83:	
  2351  068D                     	
  2352                           l1177:	
  2353  068D                     	movlw	low(01h)
  2354  068D  3001               	movwf	(??_teclado+0)+0
  2355  068E  00F0               	movf	(??_teclado+0)+0,w
  2356  068F  0870               	addwf	(teclado@i),f
  2357  0690  07F2               	
  2358                           l1179:	
  2359  0691                     	movlw	low(04h)
  2360  0691  3004               	subwf	(teclado@i),w
  2361  0692  0272               	skipc
  2362  0693  1C03               	goto	u661
  2363  0694  2E96               	goto	u660
  2364  0695  2E97               u661:
  2365  0696                     	goto	l1173
  2366  0696  2E75               u660:
  2367  0697                     	goto	l1181
  2368  0697  2E98               	
  2369                           l82:	
  2370  0698                     	line	41
  2371                           	
  2372                           l1181:	
  2373  0698                     ;teclado.c: 41:     PORTB = 0x08;
  2374                           	movlw	low(08h)
  2375  0698  3008               	movwf	(6)	;volatile
  2376  0699  0086               	line	42
  2377                           	
  2378                           l1183:	
  2379  069A                     ;teclado.c: 42:     for( i=0; i<4; i++ ) if( PORTB & 0x10<<i ) tecla = tabela[3][i];
  2380                           	clrf	(teclado@i)
  2381  069A  01F2               	
  2382                           l1185:	
  2383  069B                     	movlw	low(04h)
  2384  069B  3004               	subwf	(teclado@i),w
  2385  069C  0272               	skipc
  2386  069D  1C03               	goto	u671
  2387  069E  2EA0               	goto	u670
  2388  069F  2EA1               u671:
  2389  06A0                     	goto	l1189
  2390  06A0  2EA3               u670:
  2391  06A1                     	goto	l1197
  2392  06A1  2EC6               	
  2393                           l1187:	
  2394  06A2                     	goto	l1197
  2395  06A2  2EC6               	
  2396                           l84:	
  2397  06A3                     	
  2398                           l1189:	
  2399  06A3                     	movlw	low(010h)
  2400  06A3  3010               	movwf	(??_teclado+0)+0
  2401  06A4  00F0               	incf	(teclado@i),w
  2402  06A5  0A72               	goto	u684
  2403  06A6  2EA9               u685:
  2404  06A7                     	clrc
  2405  06A7  1003               	rlf	(??_teclado+0)+0,f
  2406  06A8  0DF0               u684:
  2407  06A9                     	addlw	-1
  2408  06A9  3EFF               	skipz
  2409  06AA  1D03               	goto	u685
  2410  06AB  2EA7               	movf	0+(??_teclado+0)+0,w
  2411  06AC  0870               	andwf	(6),w	;volatile
  2412  06AD  0506               	btfsc	status,2
  2413  06AE  1903               	goto	u691
  2414  06AF  2EB1               	goto	u690
  2415  06B0  2EB2               u691:
  2416  06B1                     	goto	l1193
  2417  06B1  2EBB               u690:
  2418  06B2                     	
  2419                           l1191:	
  2420  06B2                     	movf	(teclado@i),w
  2421  06B2  0872               	addlw	low(_tabela|((0x0)<<8)+0Ch)&0ffh
  2422  06B3  3E2C               	movwf	fsr0
  2423  06B4  0084               	bcf	status, 7	;select IRP bank0
  2424  06B5  1383               	movf	indf,w
  2425  06B6  0800               	movwf	(??_teclado+0)+0
  2426  06B7  00F0               	movf	(??_teclado+0)+0,w
  2427  06B8  0870               	movwf	(teclado@tecla)
  2428  06B9  00F1               	goto	l1193
  2429  06BA  2EBB               	
  2430                           l86:	
  2431  06BB                     	
  2432                           l1193:	
  2433  06BB                     	movlw	low(01h)
  2434  06BB  3001               	movwf	(??_teclado+0)+0
  2435  06BC  00F0               	movf	(??_teclado+0)+0,w
  2436  06BD  0870               	addwf	(teclado@i),f
  2437  06BE  07F2               	
  2438                           l1195:	
  2439  06BF                     	movlw	low(04h)
  2440  06BF  3004               	subwf	(teclado@i),w
  2441  06C0  0272               	skipc
  2442  06C1  1C03               	goto	u701
  2443  06C2  2EC4               	goto	u700
  2444  06C3  2EC5               u701:
  2445  06C4                     	goto	l1189
  2446  06C4  2EA3               u700:
  2447  06C5                     	goto	l1197
  2448  06C5  2EC6               	
  2449                           l85:	
  2450  06C6                     	line	44
  2451                           	
  2452                           l1197:	
  2453  06C6                     ;teclado.c: 44:     return(tecla);
  2454                           	movf	(teclado@tecla),w
  2455  06C6  0871               	goto	l87
  2456  06C7  2EC8               	
  2457                           l1199:	
  2458  06C8                     	line	45
  2459                           	
  2460                           l87:	
  2461  06C8                     	return
  2462  06C8  0008               	opt stack 0
  2463                           GLOBAL	__end_of_teclado
  2464                           	__end_of_teclado:
  2465  06C9                     	signat	_teclado,89
  2466                           	global	_dispLCD_init
  2467                           
  2468 ;; *************** function _dispLCD_init *****************
  2469 ;; Defined at:
  2470 ;;		line 130 in file "dispLCD4vias.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2484 ;;      Params:         0       0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0
  2487 ;;      Totals:         0       0       0       0       0
  2488 ;;Total ram usage:        0 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    1
  2491 ;; This function calls:
  2492 ;;		_dispLCD_instReg
  2493 ;; This function is called by:
  2494 ;;		_main
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2498                           	file	"dispLCD4vias.c"
  2499                           	line	130
  2500                           global __ptext3
  2501                           __ptext3:	;psect for function _dispLCD_init
  2502  0505                     psect	text3
  2503                           	file	"dispLCD4vias.c"
  2504                           	line	130
  2505                           	global	__size_of_dispLCD_init
  2506                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
  2507  0024                     	
  2508                           _dispLCD_init:	
  2509  0505                     ;incstack = 0
  2510                           	opt	stack 6
  2511                           ; Regs used in _dispLCD_init: [wreg+status,2+status,0+pclath+cstack]
  2512                           	line	132
  2513                           	
  2514                           l1111:	
  2515  0505                     ;dispLCD4vias.c: 132:     TRISDbits.TRISD2 = 0;
  2516                           	bsf	status, 5	;RP0=1, select bank1
  2517  0505  1683               	bcf	status, 6	;RP1=0, select bank1
  2518  0506  1303               	bcf	(136)^080h,2	;volatile
  2519  0507  1108               	line	133
  2520                           ;dispLCD4vias.c: 133:     TRISDbits.TRISD3 = 0;
  2521                           	bcf	(136)^080h,3	;volatile
  2522  0508  1188               	line	135
  2523                           ;dispLCD4vias.c: 135:     TRISDbits.TRISD4 = 0;
  2524                           	bcf	(136)^080h,4	;volatile
  2525  0509  1208               	line	136
  2526                           ;dispLCD4vias.c: 136:     TRISDbits.TRISD5 = 0;
  2527                           	bcf	(136)^080h,5	;volatile
  2528  050A  1288               	line	137
  2529                           ;dispLCD4vias.c: 137:     TRISDbits.TRISD6 = 0;
  2530                           	bcf	(136)^080h,6	;volatile
  2531  050B  1308               	line	138
  2532                           ;dispLCD4vias.c: 138:     TRISDbits.TRISD7 = 0;
  2533                           	bcf	(136)^080h,7	;volatile
  2534  050C  1388               	line	140
  2535                           ;dispLCD4vias.c: 140:     LCDbits.EN = 1;
  2536                           	bcf	status, 5	;RP0=0, select bank0
  2537  050D  1283               	bcf	status, 6	;RP1=0, select bank0
  2538  050E  1303               	bsf	(8),3	;volatile
  2539  050F  1588               	line	141
  2540                           	
  2541                           l1113:	
  2542  0510                     ;dispLCD4vias.c: 141:     dispLCD_instReg( 0x20|0x00|0x08);
  2543                           	movlw	low(028h)
  2544  0510  3028               	fcall	_dispLCD_instReg
  2545  0511  120A  118A  258B  120A  118A  	line	142
  2546                           ;dispLCD4vias.c: 142:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  2547                           	movlw	low(0Ch)
  2548  0516  300C               	fcall	_dispLCD_instReg
  2549  0517  120A  118A  258B  120A  118A  	line	143
  2550                           ;dispLCD4vias.c: 143:     dispLCD_instReg( 0x01 );
  2551                           	movlw	low(01h)
  2552  051C  3001               	fcall	_dispLCD_instReg
  2553  051D  120A  118A  258B  120A  118A  	line	144
  2554                           ;dispLCD4vias.c: 144:     dispLCD_instReg( 0x02 );
  2555                           	movlw	low(02h)
  2556  0522  3002               	fcall	_dispLCD_instReg
  2557  0523  120A  118A  258B  120A  118A  	line	145
  2558                           	
  2559                           l35:	
  2560  0528                     	return
  2561  0528  0008               	opt stack 0
  2562                           GLOBAL	__end_of_dispLCD_init
  2563                           	__end_of_dispLCD_init:
  2564  0529                     	signat	_dispLCD_init,89
  2565                           	global	_dispLCD
  2566                           
  2567 ;; *************** function _dispLCD *****************
  2568 ;; Defined at:
  2569 ;;		line 148 in file "dispLCD4vias.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  lin             1    wreg     unsigned char 
  2572 ;;  col             1    6[COMMON] unsigned char 
  2573 ;;  str             1    7[COMMON] PTR const unsigned char 
  2574 ;;		 -> STR_5(17), STR_4(19), STR_3(18), STR_2(18), 
  2575 ;;		 -> STR_1(17), 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  lin             1   10[COMMON] unsigned char 
  2578 ;;  pos             1    9[COMMON] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2588 ;;      Params:         2       0       0       0       0
  2589 ;;      Locals:         2       0       0       0       0
  2590 ;;      Temps:          1       0       0       0       0
  2591 ;;      Totals:         5       0       0       0       0
  2592 ;;Total ram usage:        5 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    2
  2595 ;; This function calls:
  2596 ;;		_dispLCD_dataReg
  2597 ;;		_dispLCD_lincol
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2603                           	line	148
  2604                           global __ptext4
  2605                           __ptext4:	;psect for function _dispLCD
  2606  0558                     psect	text4
  2607                           	file	"dispLCD4vias.c"
  2608                           	line	148
  2609                           	global	__size_of_dispLCD
  2610                           	__size_of_dispLCD	equ	__end_of_dispLCD-_dispLCD
  2611  0033                     	
  2612                           _dispLCD:	
  2613  0558                     ;incstack = 0
  2614                           	opt	stack 5
  2615                           ; Regs used in _dispLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2616                           ;dispLCD@lin stored from wreg
  2617                           	movwf	(dispLCD@lin)
  2618  0558  00FA               	line	150
  2619                           	
  2620                           l1115:	
  2621  0559                     ;dispLCD4vias.c: 148: void dispLCD( unsigned char lin, unsigned char col, const char * s
                                 tr );dispLCD4vias.c: 149: {;dispLCD4vias.c: 150:     char pos = col;
  2622                           	movf	(dispLCD@col),w
  2623  0559  0876               	movwf	(??_dispLCD+0)+0
  2624  055A  00F8               	movf	(??_dispLCD+0)+0,w
  2625  055B  0878               	movwf	(dispLCD@pos)
  2626  055C  00F9               	line	151
  2627                           	
  2628                           l1117:	
  2629  055D                     ;dispLCD4vias.c: 151:     dispLCD_lincol( lin, col );
  2630                           	movf	(dispLCD@col),w
  2631  055D  0876               	movwf	(??_dispLCD+0)+0
  2632  055E  00F8               	movf	(??_dispLCD+0)+0,w
  2633  055F  0878               	movwf	(dispLCD_lincol@col)
  2634  0560  00F3               	movf	(dispLCD@lin),w
  2635  0561  087A               	fcall	_dispLCD_lincol
  2636  0562  120A  118A  24B4  120A  118A  	line	153
  2637                           ;dispLCD4vias.c: 153:     while( *str )
  2638                           	goto	l1125
  2639  0567  2D7D               	
  2640                           l39:	
  2641  0568                     	line	155
  2642                           	
  2643                           l1119:	
  2644  0568                     ;dispLCD4vias.c: 154:     {;dispLCD4vias.c: 155:         dispLCD_dataReg( *str );
  2645                           	movf	(dispLCD@str),w
  2646  0568  0877               	movwf	fsr0
  2647  0569  0084               	fcall	stringdir
  2648  056A  120A  118A  2003  120A  118A  	fcall	_dispLCD_dataReg
  2649  056F  120A  118A  2529  120A  118A  	line	156
  2650                           	
  2651                           l1121:	
  2652  0574                     ;dispLCD4vias.c: 156:         ++str;
  2653                           	movlw	low(01h)
  2654  0574  3001               	movwf	(??_dispLCD+0)+0
  2655  0575  00F8               	movf	(??_dispLCD+0)+0,w
  2656  0576  0878               	addwf	(dispLCD@str),f
  2657  0577  07F7               	line	157
  2658                           	
  2659                           l1123:	
  2660  0578                     ;dispLCD4vias.c: 157:         ++pos;
  2661                           	movlw	low(01h)
  2662  0578  3001               	movwf	(??_dispLCD+0)+0
  2663  0579  00F8               	movf	(??_dispLCD+0)+0,w
  2664  057A  0878               	addwf	(dispLCD@pos),f
  2665  057B  07F9               	goto	l1125
  2666  057C  2D7D               	line	158
  2667                           ;dispLCD4vias.c: 158:     }
  2668                           	
  2669                           l38:	
  2670  057D                     	line	153
  2671                           	
  2672                           l1125:	
  2673  057D                     ;dispLCD4vias.c: 153:     while( *str )
  2674                           	movf	(dispLCD@str),w
  2675  057D  0877               	movwf	fsr0
  2676  057E  0084               	fcall	stringdir
  2677  057F  120A  118A  2003  120A  118A  	xorlw	0
  2678  0584  3A00               	skipz
  2679  0585  1D03               	goto	u541
  2680  0586  2D88               	goto	u540
  2681  0587  2D89               u541:
  2682  0588                     	goto	l1119
  2683  0588  2D68               u540:
  2684  0589                     	goto	l41
  2685  0589  2D8A               	
  2686                           l40:	
  2687  058A                     	line	159
  2688                           	
  2689                           l41:	
  2690  058A                     	return
  2691  058A  0008               	opt stack 0
  2692                           GLOBAL	__end_of_dispLCD
  2693                           	__end_of_dispLCD:
  2694  058B                     	signat	_dispLCD,12409
  2695                           	global	_dispLCD_lincol
  2696                           
  2697 ;; *************** function _dispLCD_lincol *****************
  2698 ;; Defined at:
  2699 ;;		line 124 in file "dispLCD4vias.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  lin             1    wreg     unsigned char 
  2702 ;;  col             1    3[COMMON] unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  lin             1    5[COMMON] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0, pclath, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2714 ;;      Params:         1       0       0       0       0
  2715 ;;      Locals:         1       0       0       0       0
  2716 ;;      Temps:          1       0       0       0       0
  2717 ;;      Totals:         3       0       0       0       0
  2718 ;;Total ram usage:        3 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    1
  2721 ;; This function calls:
  2722 ;;		_dispLCD_instReg
  2723 ;; This function is called by:
  2724 ;;		_dispLCD
  2725 ;;		_dispLCD_num
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2729                           	line	124
  2730                           global __ptext5
  2731                           __ptext5:	;psect for function _dispLCD_lincol
  2732  04B4                     psect	text5
  2733                           	file	"dispLCD4vias.c"
  2734                           	line	124
  2735                           	global	__size_of_dispLCD_lincol
  2736                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
  2737  0013                     	
  2738                           _dispLCD_lincol:	
  2739  04B4                     ;incstack = 0
  2740                           	opt	stack 5
  2741                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  2742                           ;dispLCD_lincol@lin stored from wreg
  2743                           	movwf	(dispLCD_lincol@lin)
  2744  04B4  00F5               	line	126
  2745                           	
  2746                           l1103:	
  2747  04B5                     ;dispLCD4vias.c: 124: void dispLCD_lincol( unsigned char lin, unsigned char col);dispLCD
                                 4vias.c: 125: {;dispLCD4vias.c: 126:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0
                                 x00) & 0x7F)) );
  2748                           	movf	(dispLCD_lincol@lin),w
  2749  04B5  0875               	movwf	(??_dispLCD_lincol+0)+0
  2750  04B6  00F4               	movlw	06h
  2751  04B7  3006               u525:
  2752  04B8                     	clrc
  2753  04B8  1003               	rlf	(??_dispLCD_lincol+0)+0,f
  2754  04B9  0DF4               	addlw	-1
  2755  04BA  3EFF               	skipz
  2756  04BB  1D03               	goto	u525
  2757  04BC  2CB8               	movf	(dispLCD_lincol@col),w
  2758  04BD  0873               	addwf	0+(??_dispLCD_lincol+0)+0,w
  2759  04BE  0774               	andlw	07Fh
  2760  04BF  397F               	addlw	080h
  2761  04C0  3E80               	fcall	_dispLCD_instReg
  2762  04C1  120A  118A  258B  120A  118A  	line	127
  2763                           	
  2764                           l32:	
  2765  04C6                     	return
  2766  04C6  0008               	opt stack 0
  2767                           GLOBAL	__end_of_dispLCD_lincol
  2768                           	__end_of_dispLCD_lincol:
  2769  04C7                     	signat	_dispLCD_lincol,8313
  2770                           	global	_dispLCD_instReg
  2771                           
  2772 ;; *************** function _dispLCD_instReg *****************
  2773 ;; Defined at:
  2774 ;;		line 75 in file "dispLCD4vias.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  i               1    wreg     unsigned char 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  i               1    2[COMMON] unsigned char 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         0       0       0       0       0
  2789 ;;      Locals:         1       0       0       0       0
  2790 ;;      Temps:          2       0       0       0       0
  2791 ;;      Totals:         3       0       0       0       0
  2792 ;;Total ram usage:        3 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_dispLCD_lincol
  2798 ;;		_dispLCD_init
  2799 ;;		_dispLCD_clr
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2803                           	line	75
  2804                           global __ptext6
  2805                           __ptext6:	;psect for function _dispLCD_instReg
  2806  058B                     psect	text6
  2807                           	file	"dispLCD4vias.c"
  2808                           	line	75
  2809                           	global	__size_of_dispLCD_instReg
  2810                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
  2811  0080                     	
  2812                           _dispLCD_instReg:	
  2813  058B                     ;incstack = 0
  2814                           	opt	stack 6
  2815                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  2816                           ;dispLCD_instReg@i stored from wreg
  2817                           	movwf	(dispLCD_instReg@i)
  2818  058B  00F2               	line	77
  2819                           	
  2820                           l1043:	
  2821  058C                     ;dispLCD4vias.c: 75: void dispLCD_instReg( unsigned char i );dispLCD4vias.c: 76: {;dispL
                                 CD4vias.c: 77:     LCDbits.RS = 0;
  2822                           	bcf	status, 5	;RP0=0, select bank0
  2823  058C  1283               	bcf	status, 6	;RP1=0, select bank0
  2824  058D  1303               	bcf	(8),2	;volatile
  2825  058E  1108               	line	78
  2826                           	
  2827                           l1045:	
  2828  058F                     ;dispLCD4vias.c: 78:     LCDbits.BUS = (i>>4);
  2829                           	movf	(dispLCD_instReg@i),w
  2830  058F  0872               	movwf	(??_dispLCD_instReg+0)+0
  2831  0590  00F0               	movlw	04h
  2832  0591  3004               u445:
  2833  0592                     	clrc
  2834  0592  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  2835  0593  0CF0               	addlw	-1
  2836  0594  3EFF               	skipz
  2837  0595  1D03               	goto	u445
  2838  0596  2D92               	movf	0+(??_dispLCD_instReg+0)+0,w
  2839  0597  0870               	movwf	(??_dispLCD_instReg+1)+0
  2840  0598  00F1               	swapf	(??_dispLCD_instReg+1)+0,f
  2841  0599  0EF1               	movf	(8),w	;volatile
  2842  059A  0808               	xorwf	(??_dispLCD_instReg+1)+0,w
  2843  059B  0671               	andlw	not (((1<<4)-1)<<4)
  2844  059C  390F               	xorwf	(??_dispLCD_instReg+1)+0,w
  2845  059D  0671               	movwf	(8)	;volatile
  2846  059E  0088               	line	80
  2847                           	
  2848                           l1047:	
  2849  059F                     ;dispLCD4vias.c: 80:     LCDbits.EN = 0;
  2850                           	bcf	(8),3	;volatile
  2851  059F  1188               	line	81
  2852                           ;dispLCD4vias.c: 81:     if( i == 0x01 || i == 0x02 )
  2853                           		decf	((dispLCD_instReg@i)),w
  2854  05A0  0372               	btfsc	status,2
  2855  05A1  1903               	goto	u451
  2856  05A2  2DA4               	goto	u450
  2857  05A3  2DA5               u451:
  2858  05A4                     	goto	l1051
  2859  05A4  2DAC               u450:
  2860  05A5                     	
  2861                           l1049:	
  2862  05A5                     		movlw	2
  2863  05A5  3002               	xorwf	((dispLCD_instReg@i)),w
  2864  05A6  0672               	btfss	status,2
  2865  05A7  1D03               	goto	u461
  2866  05A8  2DAA               	goto	u460
  2867  05A9  2DAB               u461:
  2868  05AA                     	goto	l1053
  2869  05AA  2DB6               u460:
  2870  05AB                     	goto	l1051
  2871  05AB  2DAC               	
  2872                           l19:	
  2873  05AC                     	line	82
  2874                           	
  2875                           l1051:	
  2876  05AC                     ;dispLCD4vias.c: 82:         _delay((unsigned long)((2)*(4000000/4000.0)));
  2877                           	opt asmopt_push
  2878                           opt asmopt_off
  2879                           movlw	3
  2880  05AC  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  2881  05AD  00F1               	movlw	151
  2882  05AE  3097               movwf	((??_dispLCD_instReg+0)+0),f
  2883  05AF  00F0               	u877:
  2884  05B0                     decfsz	((??_dispLCD_instReg+0)+0),f
  2885  05B0  0BF0               	goto	u877
  2886  05B1  2DB0               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  2887  05B2  0BF1               	goto	u877
  2888  05B3  2DB0               	nop2
  2889  05B4  2DB5               opt asmopt_pop
  2890                           
  2891                           	goto	l1055
  2892  05B5  2DBB               	line	83
  2893                           ;dispLCD4vias.c: 83:     else
  2894                           	
  2895                           l17:	
  2896  05B6                     	line	84
  2897                           	
  2898                           l1053:	
  2899  05B6                     ;dispLCD4vias.c: 84:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  2900                           	opt asmopt_push
  2901                           opt asmopt_off
  2902                           	movlw	13
  2903  05B6  300D               movwf	((??_dispLCD_instReg+0)+0),f
  2904  05B7  00F0               	u887:
  2905  05B8                     decfsz	(??_dispLCD_instReg+0)+0,f
  2906  05B8  0BF0               	goto	u887
  2907  05B9  2DB8               opt asmopt_pop
  2908                           
  2909                           	goto	l1055
  2910  05BA  2DBB               	
  2911                           l20:	
  2912  05BB                     	line	85
  2913                           	
  2914                           l1055:	
  2915  05BB                     ;dispLCD4vias.c: 85:     LCDbits.EN = 1;
  2916                           	bcf	status, 5	;RP0=0, select bank0
  2917  05BB  1283               	bcf	status, 6	;RP1=0, select bank0
  2918  05BC  1303               	bsf	(8),3	;volatile
  2919  05BD  1588               	line	88
  2920                           	
  2921                           l1057:	
  2922  05BE                     ;dispLCD4vias.c: 88:     if( (i & 0xF0) == (0x20 | 0x00) )
  2923                           	movlw	low(0F0h)
  2924  05BE  30F0               	andwf	(dispLCD_instReg@i),w
  2925  05BF  0572               	movwf	(??_dispLCD_instReg+0)+0
  2926  05C0  00F0               		movlw	32
  2927  05C1  3020               	xorwf	((??_dispLCD_instReg+0)+0),w
  2928  05C2  0670               	btfss	status,2
  2929  05C3  1D03               	goto	u471
  2930  05C4  2DC6               	goto	u470
  2931  05C5  2DC7               u471:
  2932  05C6                     	goto	l1069
  2933  05C6  2DE1               u470:
  2934  05C7                     	line	90
  2935                           	
  2936                           l1059:	
  2937  05C7                     ;dispLCD4vias.c: 89:     {;dispLCD4vias.c: 90:         LCDbits.RS = 0;
  2938                           	bcf	(8),2	;volatile
  2939  05C7  1108               	line	91
  2940                           	
  2941                           l1061:	
  2942  05C8                     ;dispLCD4vias.c: 91:         LCDbits.BUS = i>>4;
  2943                           	movf	(dispLCD_instReg@i),w
  2944  05C8  0872               	movwf	(??_dispLCD_instReg+0)+0
  2945  05C9  00F0               	movlw	04h
  2946  05CA  3004               u485:
  2947  05CB                     	clrc
  2948  05CB  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  2949  05CC  0CF0               	addlw	-1
  2950  05CD  3EFF               	skipz
  2951  05CE  1D03               	goto	u485
  2952  05CF  2DCB               	movf	0+(??_dispLCD_instReg+0)+0,w
  2953  05D0  0870               	movwf	(??_dispLCD_instReg+1)+0
  2954  05D1  00F1               	swapf	(??_dispLCD_instReg+1)+0,f
  2955  05D2  0EF1               	movf	(8),w	;volatile
  2956  05D3  0808               	xorwf	(??_dispLCD_instReg+1)+0,w
  2957  05D4  0671               	andlw	not (((1<<4)-1)<<4)
  2958  05D5  390F               	xorwf	(??_dispLCD_instReg+1)+0,w
  2959  05D6  0671               	movwf	(8)	;volatile
  2960  05D7  0088               	line	92
  2961                           	
  2962                           l1063:	
  2963  05D8                     ;dispLCD4vias.c: 92:         LCDbits.EN = 0;
  2964                           	bcf	(8),3	;volatile
  2965  05D8  1188               	line	93
  2966                           	
  2967                           l1065:	
  2968  05D9                     ;dispLCD4vias.c: 93:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  2969                           	opt asmopt_push
  2970                           opt asmopt_off
  2971                           	movlw	13
  2972  05D9  300D               movwf	((??_dispLCD_instReg+0)+0),f
  2973  05DA  00F0               	u897:
  2974  05DB                     decfsz	(??_dispLCD_instReg+0)+0,f
  2975  05DB  0BF0               	goto	u897
  2976  05DC  2DDB               opt asmopt_pop
  2977                           
  2978                           	line	94
  2979                           	
  2980                           l1067:	
  2981  05DD                     ;dispLCD4vias.c: 94:         LCDbits.EN = 1;
  2982                           	bcf	status, 5	;RP0=0, select bank0
  2983  05DD  1283               	bcf	status, 6	;RP1=0, select bank0
  2984  05DE  1303               	bsf	(8),3	;volatile
  2985  05DF  1588               	goto	l1069
  2986  05E0  2DE1               	line	95
  2987                           ;dispLCD4vias.c: 95:     }
  2988                           	
  2989                           l21:	
  2990  05E1                     	line	97
  2991                           	
  2992                           l1069:	
  2993  05E1                     ;dispLCD4vias.c: 97:     LCDbits.RS = 0;
  2994                           	bcf	(8),2	;volatile
  2995  05E1  1108               	line	98
  2996                           	
  2997                           l1071:	
  2998  05E2                     ;dispLCD4vias.c: 98:     LCDbits.BUS = i & 0x0F;
  2999                           	movf	(dispLCD_instReg@i),w
  3000  05E2  0872               	andlw	0Fh
  3001  05E3  390F               	movwf	(??_dispLCD_instReg+0)+0
  3002  05E4  00F0               	swapf	(??_dispLCD_instReg+0)+0,f
  3003  05E5  0EF0               	movf	(8),w	;volatile
  3004  05E6  0808               	xorwf	(??_dispLCD_instReg+0)+0,w
  3005  05E7  0670               	andlw	not (((1<<4)-1)<<4)
  3006  05E8  390F               	xorwf	(??_dispLCD_instReg+0)+0,w
  3007  05E9  0670               	movwf	(8)	;volatile
  3008  05EA  0088               	line	99
  3009                           	
  3010                           l1073:	
  3011  05EB                     ;dispLCD4vias.c: 99:     LCDbits.EN = 0;
  3012                           	bcf	(8),3	;volatile
  3013  05EB  1188               	line	100
  3014                           	
  3015                           l1075:	
  3016  05EC                     ;dispLCD4vias.c: 100:     if( i == 0x01 || i == 0x02 )
  3017                           		decf	((dispLCD_instReg@i)),w
  3018  05EC  0372               	btfsc	status,2
  3019  05ED  1903               	goto	u491
  3020  05EE  2DF0               	goto	u490
  3021  05EF  2DF1               u491:
  3022  05F0                     	goto	l1079
  3023  05F0  2DF8               u490:
  3024  05F1                     	
  3025                           l1077:	
  3026  05F1                     		movlw	2
  3027  05F1  3002               	xorwf	((dispLCD_instReg@i)),w
  3028  05F2  0672               	btfss	status,2
  3029  05F3  1D03               	goto	u501
  3030  05F4  2DF6               	goto	u500
  3031  05F5  2DF7               u501:
  3032  05F6                     	goto	l1081
  3033  05F6  2E02               u500:
  3034  05F7                     	goto	l1079
  3035  05F7  2DF8               	
  3036                           l24:	
  3037  05F8                     	line	101
  3038                           	
  3039                           l1079:	
  3040  05F8                     ;dispLCD4vias.c: 101:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3041                           	opt asmopt_push
  3042                           opt asmopt_off
  3043                           movlw	3
  3044  05F8  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  3045  05F9  00F1               	movlw	151
  3046  05FA  3097               movwf	((??_dispLCD_instReg+0)+0),f
  3047  05FB  00F0               	u907:
  3048  05FC                     decfsz	((??_dispLCD_instReg+0)+0),f
  3049  05FC  0BF0               	goto	u907
  3050  05FD  2DFC               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  3051  05FE  0BF1               	goto	u907
  3052  05FF  2DFC               	nop2
  3053  0600  2E01               opt asmopt_pop
  3054                           
  3055                           	goto	l1083
  3056  0601  2E07               	line	102
  3057                           ;dispLCD4vias.c: 102:     else
  3058                           	
  3059                           l22:	
  3060  0602                     	line	103
  3061                           	
  3062                           l1081:	
  3063  0602                     ;dispLCD4vias.c: 103:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3064                           	opt asmopt_push
  3065                           opt asmopt_off
  3066                           	movlw	13
  3067  0602  300D               movwf	((??_dispLCD_instReg+0)+0),f
  3068  0603  00F0               	u917:
  3069  0604                     decfsz	(??_dispLCD_instReg+0)+0,f
  3070  0604  0BF0               	goto	u917
  3071  0605  2E04               opt asmopt_pop
  3072                           
  3073                           	goto	l1083
  3074  0606  2E07               	
  3075                           l25:	
  3076  0607                     	line	104
  3077                           	
  3078                           l1083:	
  3079  0607                     ;dispLCD4vias.c: 104:     LCDbits.EN = 1;
  3080                           	bcf	status, 5	;RP0=0, select bank0
  3081  0607  1283               	bcf	status, 6	;RP1=0, select bank0
  3082  0608  1303               	bsf	(8),3	;volatile
  3083  0609  1588               	line	105
  3084                           	
  3085                           l26:	
  3086  060A                     	return
  3087  060A  0008               	opt stack 0
  3088                           GLOBAL	__end_of_dispLCD_instReg
  3089                           	__end_of_dispLCD_instReg:
  3090  060B                     	signat	_dispLCD_instReg,4217
  3091                           	global	_dispLCD_dataReg
  3092                           
  3093 ;; *************** function _dispLCD_dataReg *****************
  3094 ;; Defined at:
  3095 ;;		line 108 in file "dispLCD4vias.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  d               1    wreg     unsigned char 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  d               1    2[COMMON] unsigned char 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3109 ;;      Params:         0       0       0       0       0
  3110 ;;      Locals:         1       0       0       0       0
  3111 ;;      Temps:          2       0       0       0       0
  3112 ;;      Totals:         3       0       0       0       0
  3113 ;;Total ram usage:        3 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_dispLCD
  3119 ;;		_dispLCD_num
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3123                           	line	108
  3124                           global __ptext7
  3125                           __ptext7:	;psect for function _dispLCD_dataReg
  3126  0529                     psect	text7
  3127                           	file	"dispLCD4vias.c"
  3128                           	line	108
  3129                           	global	__size_of_dispLCD_dataReg
  3130                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
  3131  002F                     	
  3132                           _dispLCD_dataReg:	
  3133  0529                     ;incstack = 0
  3134                           	opt	stack 6
  3135                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  3136                           ;dispLCD_dataReg@d stored from wreg
  3137                           	movwf	(dispLCD_dataReg@d)
  3138  0529  00F2               	line	110
  3139                           	
  3140                           l1085:	
  3141  052A                     ;dispLCD4vias.c: 108: void dispLCD_dataReg( unsigned char d );dispLCD4vias.c: 109: {;dis
                                 pLCD4vias.c: 110:     LCDbits.RS = 1;
  3142                           	bcf	status, 5	;RP0=0, select bank0
  3143  052A  1283               	bcf	status, 6	;RP1=0, select bank0
  3144  052B  1303               	bsf	(8),2	;volatile
  3145  052C  1508               	line	111
  3146                           	
  3147                           l1087:	
  3148  052D                     ;dispLCD4vias.c: 111:     LCDbits.BUS = d >> 4;
  3149                           	movf	(dispLCD_dataReg@d),w
  3150  052D  0872               	movwf	(??_dispLCD_dataReg+0)+0
  3151  052E  00F0               	movlw	04h
  3152  052F  3004               u515:
  3153  0530                     	clrc
  3154  0530  1003               	rrf	(??_dispLCD_dataReg+0)+0,f
  3155  0531  0CF0               	addlw	-1
  3156  0532  3EFF               	skipz
  3157  0533  1D03               	goto	u515
  3158  0534  2D30               	movf	0+(??_dispLCD_dataReg+0)+0,w
  3159  0535  0870               	movwf	(??_dispLCD_dataReg+1)+0
  3160  0536  00F1               	swapf	(??_dispLCD_dataReg+1)+0,f
  3161  0537  0EF1               	movf	(8),w	;volatile
  3162  0538  0808               	xorwf	(??_dispLCD_dataReg+1)+0,w
  3163  0539  0671               	andlw	not (((1<<4)-1)<<4)
  3164  053A  390F               	xorwf	(??_dispLCD_dataReg+1)+0,w
  3165  053B  0671               	movwf	(8)	;volatile
  3166  053C  0088               	line	112
  3167                           	
  3168                           l1089:	
  3169  053D                     ;dispLCD4vias.c: 112:     LCDbits.EN = 0;
  3170                           	bcf	(8),3	;volatile
  3171  053D  1188               	line	113
  3172                           	
  3173                           l1091:	
  3174  053E                     ;dispLCD4vias.c: 113:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3175                           	opt asmopt_push
  3176                           opt asmopt_off
  3177                           	movlw	13
  3178  053E  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  3179  053F  00F0               	u927:
  3180  0540                     decfsz	(??_dispLCD_dataReg+0)+0,f
  3181  0540  0BF0               	goto	u927
  3182  0541  2D40               opt asmopt_pop
  3183                           
  3184                           	line	114
  3185                           	
  3186                           l1093:	
  3187  0542                     ;dispLCD4vias.c: 114:     LCDbits.EN = 1;
  3188                           	bcf	status, 5	;RP0=0, select bank0
  3189  0542  1283               	bcf	status, 6	;RP1=0, select bank0
  3190  0543  1303               	bsf	(8),3	;volatile
  3191  0544  1588               	line	116
  3192                           	
  3193                           l1095:	
  3194  0545                     ;dispLCD4vias.c: 116:     LCDbits.RS = 1;
  3195                           	bsf	(8),2	;volatile
  3196  0545  1508               	line	117
  3197                           	
  3198                           l1097:	
  3199  0546                     ;dispLCD4vias.c: 117:     LCDbits.BUS = d & 0x0F;
  3200                           	movf	(dispLCD_dataReg@d),w
  3201  0546  0872               	andlw	0Fh
  3202  0547  390F               	movwf	(??_dispLCD_dataReg+0)+0
  3203  0548  00F0               	swapf	(??_dispLCD_dataReg+0)+0,f
  3204  0549  0EF0               	movf	(8),w	;volatile
  3205  054A  0808               	xorwf	(??_dispLCD_dataReg+0)+0,w
  3206  054B  0670               	andlw	not (((1<<4)-1)<<4)
  3207  054C  390F               	xorwf	(??_dispLCD_dataReg+0)+0,w
  3208  054D  0670               	movwf	(8)	;volatile
  3209  054E  0088               	line	118
  3210                           	
  3211                           l1099:	
  3212  054F                     ;dispLCD4vias.c: 118:     LCDbits.EN = 0;
  3213                           	bcf	(8),3	;volatile
  3214  054F  1188               	line	119
  3215                           ;dispLCD4vias.c: 119:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3216                           	opt asmopt_push
  3217                           opt asmopt_off
  3218                           	movlw	13
  3219  0550  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  3220  0551  00F0               	u937:
  3221  0552                     decfsz	(??_dispLCD_dataReg+0)+0,f
  3222  0552  0BF0               	goto	u937
  3223  0553  2D52               opt asmopt_pop
  3224                           
  3225                           	line	120
  3226                           	
  3227                           l1101:	
  3228  0554                     ;dispLCD4vias.c: 120:     LCDbits.EN = 1;
  3229                           	bcf	status, 5	;RP0=0, select bank0
  3230  0554  1283               	bcf	status, 6	;RP1=0, select bank0
  3231  0555  1303               	bsf	(8),3	;volatile
  3232  0556  1588               	line	121
  3233                           	
  3234                           l29:	
  3235  0557                     	return
  3236  0557  0008               	opt stack 0
  3237                           GLOBAL	__end_of_dispLCD_dataReg
  3238                           	__end_of_dispLCD_dataReg:
  3239  0558                     	signat	_dispLCD_dataReg,4217
  3240                           	global	_delay
  3241                           
  3242 ;; *************** function _delay *****************
  3243 ;; Defined at:
  3244 ;;		line 12 in file "delay.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  t               2    0[COMMON] unsigned int 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         2       0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0
  3260 ;;      Temps:          1       0       0       0       0
  3261 ;;      Totals:         3       0       0       0       0
  3262 ;;Total ram usage:        3 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_main
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3271                           	file	"delay.c"
  3272                           	line	12
  3273                           global __ptext8
  3274                           __ptext8:	;psect for function _delay
  3275  04EE                     psect	text8
  3276                           	file	"delay.c"
  3277                           	line	12
  3278                           	global	__size_of_delay
  3279                           	__size_of_delay	equ	__end_of_delay-_delay
  3280  0017                     	
  3281                           _delay:	
  3282  04EE                     ;incstack = 0
  3283                           	opt	stack 7
  3284                           ; Regs used in _delay: [wreg+status,2+status,0]
  3285                           	line	14
  3286                           	
  3287                           l1105:	
  3288  04EE                     ;delay.c: 12: void delay ( unsigned int t );delay.c: 13: {;delay.c: 14:     while ( t )

  3289                           	goto	l1109
  3290  04EE  2CFD               	
  3291                           l6:	
  3292  04EF                     	line	16
  3293                           	
  3294                           l1107:	
  3295  04EF                     ;delay.c: 15:     {;delay.c: 16:         --t;
  3296                           	movlw	01h
  3297  04EF  3001               	subwf	(delay@t),f
  3298  04F0  02F0               	movlw	0
  3299  04F1  3000               	skipc
  3300  04F2  1C03               	decf	(delay@t+1),f
  3301  04F3  03F1               	subwf	(delay@t+1),f
  3302  04F4  02F1               	line	17
  3303                           ;delay.c: 17:         _delay((unsigned long)((1)*(4000000/4000.0)));
  3304                           	opt asmopt_push
  3305                           opt asmopt_off
  3306                           	movlw	199
  3307  04F5  30C7               movwf	((??_delay+0)+0),f
  3308  04F6  00F2               	u947:
  3309  04F7                     	nop2
  3310  04F7  2CF8               decfsz	(??_delay+0)+0,f
  3311  04F8  0BF2               	goto	u947
  3312  04F9  2CF7               	nop2
  3313  04FA  2CFB               	nop2
  3314  04FB  2CFC               opt asmopt_pop
  3315                           
  3316                           	goto	l1109
  3317  04FC  2CFD               	line	18
  3318                           ;delay.c: 18:     }
  3319                           	
  3320                           l5:	
  3321  04FD                     	line	14
  3322                           	
  3323                           l1109:	
  3324  04FD                     ;delay.c: 14:     while ( t )
  3325                           	movf	((delay@t)),w
  3326  04FD  0870               iorwf	((delay@t+1)),w
  3327  04FE  0471               	btfss	status,2
  3328  04FF  1D03               	goto	u531
  3329  0500  2D02               	goto	u530
  3330  0501  2D03               u531:
  3331  0502                     	goto	l1107
  3332  0502  2CEF               u530:
  3333  0503                     	goto	l8
  3334  0503  2D04               	
  3335                           l7:	
  3336  0504                     	line	19
  3337                           	
  3338                           l8:	
  3339  0504                     	return
  3340  0504  0008               	opt stack 0
  3341                           GLOBAL	__end_of_delay
  3342                           	__end_of_delay:
  3343  0505                     	signat	_delay,4217
  3344                           global	___latbits
  3345                           ___latbits	equ	2
  3346  0002                     	global	btemp
  3347                           	btemp set 07Eh
  3348  007E                     
  3349                           	DABS	1,126,2	;btemp
  3350                           	global	wtemp0
  3351                           	wtemp0 set btemp+0
  3352  007E                     	end


Data Sizes:
    Strings     89
    Constant    0
    Data        20
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     13      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dispLCD@str	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_5(CODE[17]), STR_4(CODE[19]), STR_3(CODE[18]), STR_2(CODE[18]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_dispLCD
    _dispLCD_init->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    2310
                                             11 COMMON     2     2      0
                                              0 BANK0     13    13      0
                              _delay
                            _dispLCD
                       _dispLCD_init
                            _teclado
                       _teclado_init
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado                                              3     3      0     387
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0     176
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              5     3      2    1289
                                              6 COMMON     5     3      2
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     372
                                              3 COMMON     3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _dispLCD_instReg                                      3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                3     1      2      99
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _dispLCD
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_init
     _dispLCD_instReg
   _teclado
   _teclado_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      25       5       46.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      32      12        0.0%
ABS                  0      0      32       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu May 20 13:36:05 2021

                       l5 04FD                         l6 04EF                         l7 0504  
                       l8 0504                         pc 0002               __CFG_CP$OFF 0000  
                      l20 05BB                        l21 05E1                        l22 0602  
                      l24 05F8                        l32 04C6                        l40 058A  
                      l25 0607                        l17 05B6                        l41 058A  
                      l26 060A                        l19 05AC                        l35 0528  
                      l29 0557                        l38 057D                        l70 04B3  
                      l39 0568                        l80 065F                        l81 0675  
                      l82 0698                        l83 068D                        l75 0619  
                      l84 06A3                        l76 063C                        l85 06C6  
                      l77 0631                        l86 06BB                        l78 0647  
                      l87 06C8                        l79 066A   __end_of_dispLCD_dataReg 0558  
                      fsr 0004                       l110 06F9                       l111 0714  
                     l120 07CE                       l112 0737                       l121 0792  
                     l113 0742                       l122 07E7                       l130 07E7  
                     l114 0743                       l106 06EB                       l123 0793  
                     l107 0776                       l115 075B                       l124 0799  
                     l116 075C                       l108 06F6                       l125 07AA  
                     l109 078F                       l117 0774                       l126 07AB  
                     l118 0790                       l127 07B8                       l119 0791  
                     l128 07C7                       l129 07CC                       u500 05F7  
                     u501 05F6                       u530 0503                       u450 05A5  
                     u610 0656              __CFG_CPD$OFF 0000                       u531 0502  
                     u515 0530                       u451 05A4                       u611 0655  
                     u460 05AB                       u540 0589                       u700 06C5  
                     u620 0669                       u604 064D                       u461 05AA  
                     u445 0592                       u525 04B8                       u541 0588  
                     u701 06C4                       u621 0668                       u605 064B  
                     u470 05C7                       u630 0673                       u550 0617  
                     u471 05C6                       u631 0672                       u551 0616  
                     u800 0732                       u801 0731                       u490 05F1  
                     u650 0684                       u570 0628                       u810 073D  
                     u491 05F0                       u651 0683                       u571 0627  
                     u811 073C                       u660 0697                       u644 067B  
                     u580 063B                       u564 061F                       u820 0756  
                     u485 05CB                       u661 0696                       u645 0679  
                     u581 063A                       u565 061D                       u821 0755  
                     u670 06A1                       u590 0645                       u830 076F  
                     u671 06A0                       u591 0644                       u831 076E  
                     u840 079F                       u841 079E                       u690 06B2  
                     u850 07A5                       u907 05FC                       u691 06B1  
                     u851 07A4                       u684 06A9                       u860 07C2  
                     u917 0604                       u685 06A7                       u861 07C1  
                     u927 0540                       u937 0552                       u947 04F7  
                     u877 05B0                       u887 05B8                       u897 05DB  
                     fsr0 0004                       indf 0000   __end_of_dispLCD_instReg 060B  
            __CFG_LVP$OFF 0000                      l1101 0554                      l1103 04B5  
                    l1111 0505                      l1105 04EE                      l1121 0574  
                    l1113 0510                      l1107 04EF                      l1051 05AC  
                    l1043 058C                      l1123 0578                      l1115 0559  
                    l1131 04B0                      l1109 04FD                      l1061 05C8  
                    l1053 05B6                      l1045 058F                      l1125 057D  
                    l1117 055D                      l1141 0619                      l1133 060B  
                    l1301 07BC                      l1071 05E2                      l1063 05D8  
                    l1055 05BB                      l1047 059F                      l1119 0568  
                    l1151 063E                      l1143 0628                      l1135 060C  
                    l1127 04A9                      l1303 07C2                      l1081 0602  
                    l1073 05EB                      l1065 05D9                      l1057 05BE  
                    l1049 05A5                      l1161 065F                      l1153 063F  
                    l1145 0631                      l1137 0610                      l1129 04AC  
                    l1305 07C7                      l1091 053E                      l1083 0607  
                    l1075 05EC                      l1067 05DD                      l1059 05C7  
                    l1171 0674                      l1163 0663                      l1155 0646  
                    l1147 0635                      l1139 0618                      l1307 07CD  
                    l1251 06E5                      l1243 06C9                      l1093 0542  
                    l1085 052A                      l1077 05F1                      l1069 05E1  
                    l1181 0698                      l1173 0675                      l1165 066A  
                    l1157 0647                      l1149 063C                      l1309 07CE  
                    l1261 0714                      l1253 06EB                      l1245 06CE  
                    l1095 0545                      l1087 052D                      l1079 05F8  
                    l1191 06B2                      l1183 069A                      l1175 0684  
                    l1167 066C                      l1159 0656                      l1271 0743  
                    l1263 072A                      l1255 06F9                      l1247 06D6  
                    l1097 0546                      l1089 053D                      l1193 06BB  
                    l1185 069B                      l1177 068D                      l1169 066D  
                    l1281 076F                      l1273 074E                      l1265 0732  
                    l1257 0704                      l1249 06E0                      l1099 054F  
                    l1195 06BF                      l1187 06A2                      l1179 0691  
                    l1291 079F                      l1283 0775                      l1275 0756  
                    l1267 0737                      l1259 070D                      l1197 06C6  
                    l1189 06A3                      l1293 07A5                      l1277 075C  
                    l1269 073D                      l1285 0776                      l1199 06C8  
                    l1295 07AB                      l1287 0793                      l1383 077E  
                    l1279 0767                      l1385 07D6                      l1297 07B3  
                    l1289 0799                      l1299 07B8                      STR_1 0040  
                    STR_2 001C                      STR_3 002E                      STR_4 0009  
                    STR_5 0051              __CFG_WRT$OFF 0000               main@senhaOK 0038  
                    _main 06C9                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _PORTB 0006                     _TRISB 0086           __end_of_dispLCD 058B  
          __CFG_FCMEN$OFF 0000                     _delay 04EE           __end_of_teclado 06C9  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E      __end_of_dispLCD_init 0529            __CFG_MCLRE$OFF 0000  
         __initialization 07EA              __end_of_main 07EA          ?_dispLCD_dataReg 0070  
                  ??_main 007B          ?_dispLCD_instReg 0070                    ?_delay 0070  
                  _ANSELH 0189            __CFG_PWRTE$OFF 0000                    _tabela 0020  
                  delay@t 0070                 ??_dispLCD 0078                 ??_teclado 0070  
 __end_of__initialization 07FC   __size_of_dispLCD_lincol 0013            __pcstackCOMMON 0070  
            __pidataBANK0 04DA             __end_of_delay 0505                   ??_delay 0072  
              __pbssBANK0 0041     __size_of_dispLCD_init 0024             ?_teclado_init 0070  
              __pmaintext 06C9            main@cont_senha 003E                   _LCDbits 0008  
            _dispLCD_init 0505                __stringtab 0003         main@senha_correta 0034  
          ??_teclado_init 0070                   _dispLCD 0558                   __ptext1 04A9  
                 __ptext2 060B                   __ptext3 0505                   __ptext4 0558  
                 __ptext5 04B4                   __ptext6 058B                   __ptext7 0529  
                 __ptext8 04EE                   _teclado 060B      end_of_initialization 07FC  
          _dispLCD_lincol 04B4                dispLCD@col 0076                dispLCD@lin 007A  
              dispLCD@pos 0079                dispLCD@str 0077          main@estado_senha 003D  
               _TRISDbits 0088  __size_of_dispLCD_dataReg 002F    __end_of_dispLCD_lincol 04C7  
__size_of_dispLCD_instReg 0080                main@estado 003F      __end_of_teclado_init 04B4  
     start_initialization 07EA           ?_dispLCD_lincol 0073  __CFG_FOSC$INTRC_NOCLKOUT 0000  
       dispLCD_lincol@col 0073         dispLCD_lincol@lin 0075                init_fetch0 04C7  
             __pdataBANK0 0020                 ___latbits 0002             __pcstackBANK0 0034  
       ??_dispLCD_dataReg 0070         ??_dispLCD_instReg 0070                  ?_dispLCD 0076  
               __pstrings 0003              teclado@tecla 0071                  ?_teclado 0070  
          __size_of_delay 0017     __size_of_teclado_init 000B                 main@F1283 0041  
               main@F1285 0030          dispLCD_dataReg@d 0072               __stringbase 0008  
               main@tecla 0040                 main@senha 0039              _teclado_init 04A9  
        dispLCD_instReg@i 0072        __end_of__stringtab 0009          __size_of_dispLCD 0033  
        ??_dispLCD_lincol 0074          __size_of_teclado 00BE         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0121             ?_dispLCD_init 0070           _dispLCD_dataReg 0529  
                init_ram0 04CB           _dispLCD_instReg 058B                  teclado@i 0072  
               stringcode 0003            ??_dispLCD_init 0073                  stringdir 0003  
                stringtab 0003  
